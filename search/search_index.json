{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Introduction","text":""},{"location":"index.html#intelligent-tutoring-system-its-for-programming-and-algorithms-education","title":"Intelligent Tutoring System (ITS) for Programming and Algorithms Education","text":"Figure 1: General idea of an ITS that supports students and tutors in programming courses."},{"location":"index.html#motivation","title":"Motivation","text":"<p>In Computer Science (CS) education, we face the challenge of increasing student enrollments over the past few years. Consequently, it has become increasingly difficult to provide high-quality and individualized learning support, particularly for novice students. Mirhosseini et al. recently conducted an interview study with CS instructors to identify their biggest pain points. Among other issues, they found that CS instructors struggle with limited or no Teaching Assistant (TA) support and the generally time-consuming task of providing student feedback and grading assignments. Thus, CS instructors would greatly benefit from automating tutoring activities to support TAs in their responsibilities.</p>"},{"location":"index.html#development","title":"Development","text":"<p>Intelligent Tutoring System (ITS) for Programming and Algorithms Education is a fully automated tutoring system developed at the Trustworthy and Secure Software Lab of the National University of Singapore (NUS) that aims to provide on-time personalized feedback to students and grading support to tutors/instructors for programming assignments in Computer Science (CS) courses. It is a language-independent system that can be used with any programming language (e.g., Python, Java, C, etc.). It supports various essential functionalities, including syntax error fixing, logical error localization / repairing, and programming conceptual automated grading. Notably, the ITS is tightly coupled with the advanced Generative AI techniques (i.e. large language models) to provide high-level natural language feedback to students. The ITS has been used in CS1010S and CS2040S at NUS.</p>"},{"location":"index.html#general-idea","title":"General Idea","text":"<p>Figure 1 illustrates the general concept of the Intelligent Tutoring System. The lecturer provides reference programs and test cases as specifications of a programming assignment, and students submit their solutions to the ITS. The ITS then automatically fixes the student\u2019s code if it is incorrect and elaborates on the fixes to provide high-level feedback as hints, gradually guiding the student to understand the foundational reason for the error. Additionally, the ITS provides a grading support system that automatically grades student submissions for lecturers.</p> <p>This website provides detailed documentation of the ITS, including</p> <ul> <li>Overview of architecture</li> <li>Demo and Usage</li> <li>API Documentation and Endpoints</li> <li>Illustration of the system components.</li> </ul>"},{"location":"index.html#experience-in-practice","title":"Experience in Practice","text":"<p>We share our experience in building and using the ITS in the following CS courses at NUS:</p> <ul> <li>CS3213 Foundations of Software Engineering: Building the ITS along with Software Engineering teaching.</li> <li>CS1010S Programming Methodology: Experience of ITS in CS-1 course.</li> <li>CS2040S Data Structures and Algorithms: Experience of ITS in CS-2 course.</li> </ul> <p>This documentation is intended for students, lecturers, and developers who are interested in using the ITS for their programming courses. Please reach out if you are interested in collaborating with us or have any questions about the system.</p>"},{"location":"ack.html","title":"Acknowledgement","text":"<p>We thank for all contributors who have contributed to implement the Intelligent Tutoring System, including,</p> <p>FYP Students in Academic Year 2021 -- 2022</p> <p>Kishore R Ai Guo Jon Chua</p> <p>FYP Students in Academic Year 2022 -- 2023</p> <p>Christopher Goh Huang Zhenxin Eris Jacey Masagaca Ethan Noah Rozario</p> <p>All CS3213 Students in Academic Year 2021 -- 2023</p> <p>We thank for the course instructors who have supported the Intelligent Tutoring System in their course CS1010S and CS2040S, including,</p> <ul> <li>Prof. Ashish Deepak Dandekar</li> <li>Prof. Arnab Bhattacharyya and Prof. Seth Gilbert</li> </ul> <p>We thank for relevant research that makes Intelligent Tutoring System become a reality.</p> <p>Verifix: Verified repair of programming assignments Automated Clustering and Program Repair for Introductory Programming Assignments Search, Align, and Repair: Data-Driven Feedback Generation for Introductory Programming Exercises Refactory: Re-factoring based Program Repair applied to Programming Assignments Concept-based Automated Grading of CS-1 Programming Assignments</p> <p>We thank for the funding supported by a Singapore Ministry of Education (MoE) Tier 3 grant \"Automated Program Repair\", MOE-MOET32021-0001.</p>"},{"location":"contact.html","title":"Contact Us","text":"Abhik Roychoudhury Provost\u2019s Chair Professor, NUS <p>Abhik Roychoudhury is a Provost's Chair Professor of Computer Science at the National University of Singapore. Prof Abhik's research focuses on software testing and analysis, software security and trust-worthy software construction. His research on automatically repairing programs at a large scale contributes to the vision of self-healing software. His research team is known for contributions to program repair, and fuzz testing.</p> Zhiyu Fan PhD Candidate, NUS <p>Zhiyu Fan is a final year PhD candidate in the School of Computing at the National University of Singapore, advised by Prof. Abhik Roychoudhury. He is broadly interest in Software Engineering and Generative AI, his research has been focused on the intersections of automated program repair, automatic programming, and computer science education. His has led the development of Intelligent Tutoring System to boost Computer Science education at scale via SE and LLM techniques, which has been deployed in NUS.</p> <p>If you are a researcher or teaching staff at a university and are interested in adopting our resources for your teaching purpose, please get in touch with abhik@comp.nus.edu.sg, zhiyufan@outlook.com.</p>"},{"location":"ip.html","title":"Intellectual Property","text":"<p>The Intelligent Tutoring System is registered under the license of National University of Singapore.</p> <p>There is no restriction of using ITS internally in NUS, please contact zhiyufan@outlook.com for a customized deployment. For usage outside NUS, please contact Prof. Abhik Roychoudhury and Jonathan Tan for a discussion.</p>"},{"location":"courses/cs1010s/experience.html","title":"Experience in CS1010S","text":"<p>We share our experience of deploying the ITS in CS1010S during the fall semester of the 2023-2024 academic year, which involved 571 students. </p>"},{"location":"courses/cs1010s/experience.html#setup","title":"Setup","text":"<p>CS1010S covers topics such as recursion, higher-order functions, abstract data types, basic data structures, sorting algorithms, and object-oriented programming through nine weekly assignments. Students can make multiple attempts to revise their solutions before the deadline. After the deadline, TAs manually review incorrect submissions and write personalized feedback to students who submit incorrect solutions. As a first step towards complete deployment, this setup restricted the generated feedback visible only to the human tutors.  </p> <ul> <li>We enabled ITS for 20+ programming assignments spanning six weeks of assignments. </li> <li>We excluded the first two introductory weeks and the final week, which involves object-oriented programming that the current ITS does not support.</li> <li>Coursemology forwards feedback generation requests to ITS only for finalised submissions that fail pre-defined test cases.</li> <li>Correct submissions from past semesters were used as reference solutions to enhance the alignment component.</li> </ul>"},{"location":"courses/cs1010s/experience.html#results","title":"Results","text":"<p>Throughout the semester, Coursemology collected 3,117 incorrect solutions from 571 students. </p> <ul> <li>The deployed ITS successfully generated correct patches (i.e. pass all test cases) for 1,758 (56.4%) incorrect submissions.</li> <li>Among those 1,758 correct patches, 77.2% of the ITS-generated feedback are semantically equivalent to TAs feedback.</li> </ul> <p>The main bottleneck is that the current ITS focuses on offering last-mile help to students. It is not capable of generating step-by-step feedback for students who are stuck at the beginning or middle of a task. To address this limitation, we are planning to develop APR techniques for incomplete programs. Fortunately, the modular design of the ITS allows us to easily integrate such new APR techniques into the system once available.</p>"},{"location":"courses/cs1010s/intro.html","title":"CS1010S Programming Methodology","text":""},{"location":"courses/cs1010s/intro.html#introduction","title":"Introduction","text":"<p>CS1010S Programming Methodology is the first-year programming course in the National University of Singapore (NUS) School of Computing. The course introduces students to the fundamental concepts of programming and problem-solving using Python. CS1010S includes topics such as basic programming constructs, functions, recursion, basic data structures, and algorithms. CS1010S usually has hundreds of students enrolled each semester. CS1010S uses Coursemology as the learning management system (LMS). Each week, students are given a few programming assignments to practice the concepts taught in the lectures and tutorials in Coursemoloy. The teaching assistants (TAs) then needs to grade and comment those submitted assignments based on the correctness of the code and the quality of the programming style, which is time-consuming. </p> <p>To assist the TAs in grading the programming assignments and collect requirements from stakeholders as short-running projects for future CS3213, we have integrated the Intelligent Tutoring System with Coursemology platform and practically deployed it in CS1010S throughout AY 2023 - 2024. Beyond Coursemology integration, we have also developed a web browser plugin for the ITS to provide easy integration with other LMS platforms. </p> <p>In this page, we first discuss the usage in Coursemology and the usage in web plugin developed for the ITS, then we share the experience of using the ITS in CS1010S to support more than 20 programming assignments.</p>"},{"location":"courses/cs1010s/lms.html","title":"CS1010S Programming Methodology","text":""},{"location":"courses/cs1010s/lms.html#coursemology-as-lms","title":"Coursemology as LMS","text":"<p>Coursemology is an open source gamified learning manage system for Computer Science courses, which is widely used in NUS for programming courses.  Coursemology allows course instructors to setup programming assignments, quizzes, and other learning activities. Like other online judges, Coursemology provides an online code editor and programming environment for students to write, execute and submit their code. The Coursemology platform also provides a test-based grading system that automatically runs students' code against the test cases provided by the course instructor to check the correctness of the code. Moreover, Coursemology also allows course instructors and teaching assistants to leave manually written comments and feedback on students' code submissions.</p> <p>To improve the efficiency of grading and providing detailed feedback to CS1010S students, we have integrated the Intelligent Tutoring System (ITS) seamlessly with Coursemology to provide help for any programming assignments. </p>"},{"location":"courses/cs1010s/lms.html#traditional-workflow","title":"Traditional Workflow","text":"<p>Figure 1 shows and illustrates the snapshot traditional workflow of grading programming assignments in Coursemology.  </p> <ol> <li>Course instructor needs to provide a problem statement, a set of public and private test cases, and optionally a reference solution for the programming assignment. A grading rubric is often distributed to the teaching assistants (TAs) to guide them in grading the assignments.</li> <li>Students then work on the assignment and submit their solutions to Coursemology. Typically wait for 1-2 weeks for the comments from TAs</li> <li>Coursemology automatically evaluates the correctness of the student's code by running it against the test cases.</li> <li>The test-based evaluation result is often used as a reference, but teaching assistants (TAs) still need to manually inspect the student's code, grade and write feedback for each student submission based on the grading rubric. </li> </ol>"},{"location":"courses/cs1010s/lms.html#its-enhanced-workflow","title":"ITS Enhanced Workflow","text":"<p>Figure 2 shows and illustrates the snapshot enhanced workflow of grading programming assignments in Coursemology with the ITS. </p> <ol> <li>Course instructor needs to provide a problem statement, a set of public and private test cases, and optionally a reference solution for the programming assignment. A grading rubric is often distributed to the teaching assistants (TAs) to guide them in grading the assignments.</li> <li>Students then work on the assignment and submit their solutions to Coursemology. </li> <li>Coursemology automatically evaluates the correctness of the student's code by running it against the test cases.<ol> <li>Coursemology forwards the student's submission and send feedback generation request to the ITS's API endpoint.</li> <li>ITS takes over the submission and response the formulated high-level feedback for the students in Coursemology. The detailed procudure is described in Overview and Example.</li> </ol> </li> </ol> <ol> <li>Coursemology highlights the feedback response from the ITS in the code editor and draft the comments for the TAs to review and submit.</li> <li>TAs review the ITS localized errors, explanation, drafted comments, add additional comments if necessary, and submit the final feedback to the students.</li> </ol>"},{"location":"courses/cs1010s/plugin.html","title":"CS1010S Programming Methodology","text":""},{"location":"courses/cs1010s/plugin.html#web-plugin-for-its","title":"Web plugin for ITS","text":"<p>In addition to the tightly coupled integration with Coursemology, we would also like other learning management systems (e.g., Canvas, Blackboard) to easily benefit from the Intelligent Tutoring System (ITS). To achieve this goal, we have developed a web browser plugin for the ITS.  The web plugin is a lightweight extension that can be installed in any web browser and used to provide feedback and grading suggestions for programming assignments in any LMS platform.</p> Figure 1: Workflow of ITS Web Plugin. <p>Figure 1 demonstrates the workflow of the web plugin. The web plugin acts as an middleware between the LMS and the ITS. It proactively detects latest submissions from the LMS for each student and sends feedback generation requests to the ITS when requested by the student. The core effort of integrating the ITS with a new LMS platform is a communication protocol for the plugin to retrieve student submissions. The rest of interactions with the ITS are already implemented and handled by the plugin.</p> <p>Overall, the web plugin provides:</p> <p>For course instructors,</p> <ul> <li>An interface to configure programming assignments, including problem statements, test cases, and reference solutions.</li> <li>An interface that tracks the <code>&lt;student submission, student feedback, drafted comment&gt;</code> pairs for each assignment.</li> <li>An interface that allows to customize the Generative AI models for feedback generation.</li> <li>An interface to configure student's permissions and access range to the ITS. (e.g., feedback request quota, feedback visibility, etc.)</li> </ul> <p>For students, </p> <ul> <li>An interface to submit programming assignments. (optional)</li> <li>An interface that request feedback from ITS for any submission.</li> <li>An interface that tracks the history of feedback and comments from the ITS.</li> </ul>"},{"location":"courses/cs1010s/plugin.html#pre-requisites","title":"Pre-requisites","text":"<ul> <li>Google Chrome or Microsoft Edge browser.</li> <li>LMS authentication credentials. (We provide local plugin deployment guidelines for privacy concerns)</li> <li>LMS API endpoint URL to fetch student submissions.</li> </ul> <p>To apply the web plugin for your LMS, please contact us for further instructions.</p>"},{"location":"courses/cs2040s/intro.html","title":"CS2040S Data Structures and Algorithms","text":""},{"location":"courses/cs2040s/intro.html#introduction","title":"Introduction","text":"<p>CS2040S Data Structures and Algorithms is a successor to the first-year programming course in the National University of Singapore (NUS) School of Computing. The course introduces students to the fundamental concepts of data structures and algorithms using Java. CS2040S includes topics such as basic data structures (e.g., arrays, linked lists, stacks, queues, trees, graphs), sorting and searching algorithms, and algorithm analysis. Similar to CS1010S, CS2040S also uses Coursemology as the learning management system (LMS). </p> <p>As the GenAI technology demonstrates promising automatic programming capabilities, we wonder that the basic programming skills taught in CS-1 courses will not remain as important as they are today. Instead, we argue that in the future of computing education, the importance of solving programming tasks may be replaced by the deep understanding of foundational knowledge in advanced courses. However, Can automated tutoring systems go beyond CS-1 and support advanced courses? is still an under-explored question.</p> <p>We deployed ITS in CS2040S throughout spring semester of AY 2023 - 2024 and worked with CS2040S team to explore the possibility of providing high-level conceptual feedback for advanced CS courses.   </p>"},{"location":"courses/cs3213/concept.html","title":"CS3213 Foundations of Software Engineering","text":""},{"location":"courses/cs3213/concept.html#teaching-concept-of-cs3213","title":"Teaching Concept of CS3213","text":"<p>The goal of CS3213 is to deepen the understanding of software engineering and practice the already learned principles in a realistic project environment. The project aims to incrementally develop a functional and ready-to-use intelligent tutoring system for programming education. Developing such a system in the context of a SE course is particularly interesting because (1) the third-year students who develop the system can relate to the users (first-year students) since they once had to learn programming, and (2) all project stakeholders are available in the university. The presence of stakeholders allows embedding requirements elicitation as part of the SE project class.</p>"},{"location":"courses/cs3213/concept.html#roadmap-of-cs3213-projects","title":"Roadmap of CS3213 Projects","text":"Figure 1: Illustration of Developing ITS with CS3213 <p>Figure 1 illustrates the project evolution over multiple years. Before we started any development, we collected initial requirements (step 1) from the lecturers of some first-year programming courses. In step 2, we developed a baseline codebase, which included designing the artifact and the desired workflow. This first version already defined interfaces between components and provided common data structures. The baseline also included a prototypical implementation for most of the initially planned components to test their feasibility. Having the baseline provides the students with additional requirements like the existing architecture, which should not be changed. On the other hand, it also provides them with existing functionalities similar to a real-world long-running SE project.</p> <p>For CS3213, we design multiple short-running SE projects based on the feedback from first year course instructor in the requirement elicitation session of our course, and these projects essentially representing the implementation variants of existing or new components. For example, in the first year, we mainly had projects to build program analysis capabilities. After our course, we evaluate all projects and integrate the best contributions into our baseline implementation. Therefore, over the years, the baseline will grow and improve. At the same time, we also deploy the increments of the system in its real-world context, i.e., with users from first-year programming courses, and collect additional feedback and requirements from students and tutors.</p>"},{"location":"courses/cs3213/concept.html#practical-deployment","title":"Practical Deployment","text":"<p>As a multi-year research and teaching effort, the deliverable outcome of CS3213 has been internally deployed in CS1010S and CS2040S at NUS. Check out the CS1010S experience and CS2040S experience of using the ITS in these courses.</p>"},{"location":"courses/cs3213/curriculum.html","title":"CS3213 Foundations of Software Engineering","text":""},{"location":"courses/cs3213/curriculum.html#curriculum","title":"Curriculum","text":"<p>To facilitate the widely adaption of CS3213, we prepare detailed curriculum and materials for the course. The curriculum is divided into two parts: - The foundation knowledge of software engineering in lectures. - The hands-on experience of the self-sustained project (Development of Intelligent Tutoring System). </p> <p>The course curriculum focuses on the main activities in SE. Furthermore, we introduce selected relevant SE topics for our project, e.g., automated program repair, static analysis, and fault localization.  Each lecture is separated into two parts: (a) the teaching of foundations in the aforementioned areas, and (b) the teaching of project-specific knowledge and corresponding applications.</p>"},{"location":"courses/cs3213/curriculum.html#requirements-analysis-and-modeling","title":"Requirements Analysis and Modeling","text":"<p>The course starts with a focus on requirements engineering, their elicitation, and modeling. Therefore, we invite stakeholders like lecturers and teaching assistants from the first-year programming courses to an interview session with the third-year students. This interview session is prepared with corresponding assignments about question design and followed up with requirements modeling exercises using UML Use Cases. We also teach other means for requirements modeling, e.g., with finite state machines and sequence diagrams.</p>"},{"location":"courses/cs3213/curriculum.html#software-architecture-and-design","title":"Software Architecture and Design","text":"<p>Afterwards, we introduce general principles for software architecture design and modeling. The project-specific part of the lecture introduces the existing architecture and its components, including the available interfaces, which need to be used by the students in their own implementations. We further discuss architecture variants of the existing architecture to discuss pro and contra of the made design decisions.</p> <p>Our baseline Java implementation already provides the students with elementary classes and functionalities, which they can and need to reuse. To illustrate the fine-grained design, we first introduce relevant design principles and patterns that occur in our implementation. We do not give a comprehensive introduction to design patterns because there is another dedicated software design course in our institution. Instead, we only introduce the most relevant design aspects to enable the students to work on the projects.</p>"},{"location":"courses/cs3213/curriculum.html#project-planning-and-implementation","title":"Project Planning and Implementation","text":"<p>As part of the assignments, the students have to submit a project plan. Therefore, we also introduce the basics of project planning, work package design, and milestone and resource planning, including necessary models like Gantt-Charts. The coding itself is a major part of the project and is mostly supported by the mentors in project-specific meetings. The lecture introduces general principles like Clean Code and testing and debugging techniques meant to help the students in their concrete implementation efforts.</p>"},{"location":"courses/cs3213/curriculum.html#testing-debugging-and-integration","title":"Testing, Debugging, and Integration","text":"<p>As automated testing and debugging is a major part of an intelligent tutoring system, we also introduce several validation concepts and debugging techniques. In particular, we teach foundations in test-suite estimation, functional testing, whitebox testing, structural testing, dataflow testing, and mutation testing. To this end, we also introduce the basics of static analysis like control-flow graphs (CFGs) and Define-Use Analysis (DUA). Furthermore, we discuss the basics of debugging with the TRAFFIC principle and delta debugging and dive deeper into the basics of static and dynamic slicing and statistical fault localization. Towards the end of the curriculum, we also discuss integration testing strategies and the related challenges.</p>"},{"location":"courses/cs3213/curriculum.html#project-specific-topics","title":"Project-Specific Topics","text":"<p>In addition to the foundations in general software engineering, we teach the background in automated program repair and provide an overview of existing solutions for ITS components. Depending on the advertised projects, we also discuss more specialized topics like taint analysis and Worst-Case Execution Time (WCET) analysis to ensure the students have the relevant background and material to work on their projects.</p>"},{"location":"courses/cs3213/curriculum.html#team-management","title":"Team Management","text":"<p>We ask the students to form groups of 3-4 people to work on the project. We allow them to search for their team members instead of a random assignment by the teaching team. We prepare an ungraded Assignment 0 for the project selection, which provides an overview and additional references for all available projects for the specific year. Each team can bid for three projects, while the teaching team allocates the final project. We encourage each team to join the same lab sessions to maximize the possibility of team interaction. Additionally, each team meets weekly with a graduate-level mentor focusing on the team's planning, design, and implementation progress. The mentors also have access to the team's code repository to provide feedback.</p> <p>The lectures cover the following essential topics in software engineering:</p> Week Topics Details 1 Introduction to ITS Introduction to the Intelligent Tutoring System and the project. 2 Requirement Elicitation with Customers Logistics, Projects, Assignment 2. 3 Requirements Modeling + Comments for Software Architecture Requirements Analysis/Elicitation, Assignment 3 and 4. 4 ITS Design &amp; Project Planning Behavior Models, Architectural Drivers, Assignment 5. 5 Unit Testing Module Design, JUnit Testing @ ITS, Assignment 6. - Midterm - 6 Advanced Testing (Best Practices, Testable Code) Project Plans, Testing with Coverage Information, Assignment 7. 7 Debugging Intermediate Deliverable, Interactive Debugging, Design Patterns. 8 Static Analysis Fault Localization, Static Analysis Tools, Assignment 8. 9 Implementation (Clean Code) Clean Code Examples, Software Architecture Variants for ITS, Assignment 9. 10 Integration Testing &amp; Strategies Discussion Assignment 7, Integration Testing Exercises. 11 Summary Recap of all topics, complete ITS workflow example, aspects of version control. 12 Student Presentations - <p>Each week in our curriculum is accompanied by a lecture and a lab session. The labs are used to meet in smaller groups of students and discuss their assignments. The assignments track the major milestones in the students' projects, below list gives an overview of the assignments:</p> ID Topics Details 1 Requirements Analysis &amp; Elicitation Preparations and questions for the interview session with the customer. 2 Requirements Modeling Requirement modeling with UML Use Case and Activity diagrams. 3 Architectural Drivers and Architecture Variants Discussion of architecture variants and the requirements that influence architectural design. 4 Strategy and Project Planning Project-specific planning including a Gantt-Chart and a resource plan. 5 Detailed Design Structural and behavioral design of the students' implementation with UML models. 6 Intermediate Deliverable Towards the middle of the course, we ask the students to submit a minimal project implementation and a report with their project plans and various models. 7 Validation (i.e., Unit Testing) Test case design and test report. 8 Presentation &amp; Final Artifact At the end of the course, all teams need to present their project and submit their code. 9 Final Report After the presentation, the students additionally need to submit a final report, including a retrospective of their project and design decisions. <p>We provide the lecture materials/recordings/slides and project materials of NUS AY 2021/2022 as an example. </p> <ul> <li>The lecture materials can be found at main lecture and project lecture.  </li> <li>The ITS project topics can be found at project topics.  </li> </ul>"},{"location":"courses/cs3213/intro.html","title":"CS3213 Foundations of Software Engineering","text":""},{"location":"courses/cs3213/intro.html#challenges-motivation","title":"Challenges &amp; Motivation","text":""},{"location":"courses/cs3213/intro.html#increasing-student-enrollments-in-computer-science","title":"Increasing Student Enrollments in Computer Science","text":"<p>In Computer Science (CS) education, we face the challenge of increasing student enrollments over the past few years. Consequently, it has become increasingly difficult to provide high-quality and individualized learning support, particularly for novice students. Mirhosseini et al. recently conducted an interview study with CS instructors to identify their biggest pain points. Among other issues, they found that CS instructors struggle with limited or no Teaching Assistant (TA) support and the generally time-consuming task of providing student feedback and grading assignments. Thus, CS instructors would greatly benefit from automating tutoring activities to support TAs in their responsibilities.</p>"},{"location":"courses/cs3213/intro.html#designing-projects-in-software-engineering-education","title":"Designing Projects in Software Engineering Education","text":"<p>Another typical problem in Computer Science education is the provision of Software Engineering (SE) projects. Software engineering is typically a compulsory course in the university's curriculum for computer science students, and it is often followed or accompanied by development projects, in which students can collect hands-on experience in software development in a team going beyond a programming exercise. Such projects come with inherent difficulties like acquiring industry partners and the dilemma that such software projects are often under- or over-specified. Additionally, such projects are often one-time efforts within one team or one course, and students cannot experience the evolution of a software system.</p>"},{"location":"courses/cs3213/intro.html#cs3213-as-a-solution","title":"CS3213 as a Solution","text":"<p>To address these two problems, we designed a new course, Foundations of Software Engineering (CS3213) that provides the students with foundational knowledge and understanding of different aspects of software engineering including requirements, modelling, architecture, behavior, environment, software analysis, validation and verification. </p> <p>CS3213 serves as a second software engineering course exposing the students to the mathematical foundations of software engineering while simultaneously supplementing and elaborating the foundations in the form of a semester long project, which is building an Intelligent Tutoring System for Programming and Algorithms Education with and for students. As a multi-year research and teaching effort, we combine third-year SE teaching and first-year programming teaching via a long-term, practical, self-sustained software system.</p>"},{"location":"courses/cs3213/intro.html#cs3213-curriculum","title":"CS3213 Curriculum","text":"<p>To facilitate the widely adaption of CS3213, we prepare detailed curriculum and materials for the course. The curriculum is divided into two parts: - The foundation knowledge of software engineering in lectures. - The hands-on experience of the self-sustained project (Development of Intelligent Tutoring System). </p> <p>We provide the lecture materials/recordings/slides and project materials of NUS AY 2021/2022 as an example. For latest materials, please contact the managing team of CS3213 at contact us.</p>"},{"location":"courses/cs3213/lecture.html","title":"CS3213 Lecture Material","text":""},{"location":"courses/cs3213/lecture.html#lecture-1-introduction","title":"Lecture 1: Introduction","text":"<p>slides 1, slides 2, recording</p> <p>In this lecture, we introduced the foundations and the project in this course. Additionally, we introduced the field of \"requirements engineering\".</p>"},{"location":"courses/cs3213/lecture.html#lecture-2-uml","title":"Lecture 2: UML","text":"<p>slides, recording (part 1), recording (part 2) </p> <p>In this lecture, we discussed UML semantics, including sequence diagram based formal modeling of the system description beyond scenarios.</p>"},{"location":"courses/cs3213/lecture.html#lecture-3-state-charts","title":"Lecture 3: State Charts","text":"<p>slides, recording</p> <p>In this lecture, we described the nuances of state chart semantics.</p>"},{"location":"courses/cs3213/lecture.html#lecture-4-intelligent-tutoring-system","title":"Lecture 4: Intelligent Tutoring System","text":"<p>slides, recording (part 1), recording (part 2), recording (part 2)</p> <p>In this lecture, we gave an idea of the area behind the course project - Intelligent tutoring systems. We discussed the general topic, available tools, involved technical challenges, and the feedback issue in intelligent tutoring.</p>"},{"location":"courses/cs3213/lecture.html#lecture-5-static-analysis-part-1-motivation","title":"Lecture 5: Static Analysis (Part 1 Motivation)","text":"<p>slides, recording </p> <p>In this lecture, we discussed program representations such as the Control Flow Graph (CFG).</p>"},{"location":"courses/cs3213/lecture.html#lecture-6-static-analysis-part-2-program-representation","title":"Lecture 6: Static Analysis (Part 2 Program Representation)","text":"<p>slides, recording</p> <p>In this lecture, we covered simpler descriptin of static program analysis based on data-flow analysis.</p>"},{"location":"courses/cs3213/lecture.html#lecture-7-white-box-testing-test-suite-estimation","title":"Lecture 7: White-box Testing / Test suite estimation","text":"<p>slides, recording </p> <p>In this lecture, we discussed white box testing and test-suite estimation.</p>"},{"location":"courses/cs3213/lecture.html#lecture-8-mid-term","title":"Lecture 8: Mid-term","text":""},{"location":"courses/cs3213/lecture.html#lecture-9-debugging","title":"Lecture 9: Debugging","text":"<p>slides, recording</p> <p>In this lecture, we continued with our discussions on testing and analysis. Some background material on software debugging was presented, including slicing and fault localisation.</p>"},{"location":"courses/cs3213/lecture.html#lecture-10-non-functional-issues-security-and-timeliness","title":"Lecture 10: Non-functional issues: Security and Timeliness","text":"<p>slides 1, slides 2, recording </p> <p>In this lecture, we discussed software performance issues and timing-critical software design.</p>"},{"location":"courses/cs3213/lecture.html#lecture-11-invitation-talks","title":"Lecture 11: Invitation Talks","text":"<p>slides</p> <p>In this lecture, we had two talks on emerging research topics in automated programming by Dr. Sumit Gulwani and Professor Ilya Sergey.</p>"},{"location":"courses/cs3213/lecture.html#lecture-12-revision-of-topics","title":"Lecture 12: Revision of topics","text":"<p>slides, recording</p> <p>In this lecture, we first continued our discussion on sofware performance aspects, and then recapped previous course topics with some warm-up exercises.</p>"},{"location":"courses/cs3213/lecture_p.html","title":"CS3213 Lecture (Project Part)","text":""},{"location":"courses/cs3213/lecture_p.html#lecture-1-introduction-to-course-project","title":"Lecture 1: Introduction to Course Project","text":"<p>slides</p> <p>In Lecture 1, we introduced the idea and topic of our course projects and explained the logistics of our lab session. Furthermore, we introduced the basics of requirements and their elicitation, as needed for Lecture 2.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-2-requirements-elicitation","title":"Lecture 2: Requirements Elicitation","text":"<p>slides</p> <p>In Lecture 2, we performed a live requirements elicitation section with real stakeholders of our overall project. The students prepared questions in advance and interviewed the customers.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-3-requirements-modeling","title":"Lecture 3: Requirements Modeling","text":"<p>slides</p> <p>In Lecture 3, we discussed the requirements elicitation session performed in Lecture 2 and further discussed the resulting requirements models submitted by the students. We provided a general introduction to software architecture to set foot in the solution space.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-4-architecture","title":"Lecture 4: Architecture","text":"<p>slides</p> <p>In Lecture 4, we provided more information on the existing architecture of our project's framework and illustrated several architectural styles.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-5-design-planning","title":"Lecture 5: Design Planning","text":"<p>slides</p> <p>In Lecture 5, we discussed aspects of the module design for each project and introduced essential parts of our baseline implementation as the internal program representation. We further discussed the basics of project planning.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-6-testing","title":"Lecture 6: Testing","text":"<p>slides</p> <p>In Lecture 6, we discussed the basics of software testing and introduced concepts like equivalence class partitioning and unit testing.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-7-advanced-testing","title":"Lecture 7: Advanced Testing","text":"<p>slides</p> <p>In Lecture 7, we intensified the knowledge from Lecture 6 about software testing. We discussed aspects of testable code and test-driven development. We further started introducing the foundations of debugging.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-8-debugging","title":"Lecture 8: Debugging","text":"<p>slides</p> <p>In Lecture 8, we investigated more debugging approaches and introduced concepts like TRAFFIC, dynamic and static slicing, and statistical fault localization.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-9-static-analysis","title":"Lecture 9: Static Analysis","text":"<p>slides</p> <p>In Lecture 9, we provided more examples for program slicing and gave a practical introduction to static analysis.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-10-implementation","title":"Lecture 10: Implementation","text":"<p>slides</p> <p>In Lecture 10, we discussed implementation aspects and introduced several notions of clean code.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-11-integration","title":"Lecture 11: Integration","text":"<p>slides</p> <p>In Lecture 11, we discussed typical problems with software integration and introduced integration strategies and testing concepts.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-12-summary","title":"Lecture 12: Summary","text":"<p>slides</p> <p>In Lecture 12, we recaped all discussed topics and provided a summary for all project-parts of the lecture.</p>"},{"location":"courses/cs3213/lecture_p.html#lecture-13-final-project-presentations","title":"Lecture 13: Final Project Presentations","text":"<p>slides</p> <p>In Lecture 13, every student group presented their final outcome and demonstrated their contributions.</p>"},{"location":"courses/cs3213/project/intro.html","title":"Overview","text":""},{"location":"courses/cs3213/project/intro.html#intelligent-tutoring-system","title":"Intelligent Tutoring System","text":"<p>The high-level idea of the Intelligent Tutoring System is to introduce an automated technique to provide feedback and grading suggestions for programming assignments. As shown in the above figure, for a given programming assignment, the tutor would provide a reference solution and some test cases, while the student would submit a solution and receive feedback. The feedback should go beyond the simple execution of test cases and tell the student where and how to fix the submission. More sophisticated and gradual ways of feedback could also be introduced.</p>"},{"location":"courses/cs3213/project/topics.html","title":"Topics","text":"<p>Developing such an Intelligent Tutoring System (ITS) includes many conceptual and technical challenges. We summarized some of them into projects, from which the students in CS3213 need to choose one as a group project. Please find below the project summaries as proposed for the students in CS3213 (NUS AY 2021/2022). We group projects by their provided functionalities. Each project has assigned estimated difficulty levels (Low, Medium, High) in the categories: coding (i.e., programming intensity), theoretical complexity (i.e., need for background study), amount of research involved (i.e., be innovative and create something new), and the involvement of HCI (Human-Computer Interaction) aspects.</p> <p>More details can be found in our Assignment 0.</p>"},{"location":"courses/cs3213/project/topics.html#topic-1-parsing","title":"Topic 1 - Parsing","text":"<p>Project 1.1 C Parser: Develop a parser to transform C programs into a (provided) common data structure based on the control-flow graph (CFG). Additionally, provide a concretizer, which back-transforms the program in the internal common data structure to a C source file. \u2192 [Coding: High, Theory: Low, Research: -, HCI: -]</p> <p>Project 1.2 Python Parser: Same as 1.1 for Python. \u2192 [Coding: High, Theory: Low, Research: -, HCI: -]</p>"},{"location":"courses/cs3213/project/topics.html#topic-2-aligning-matching-of-programs","title":"Topic 2 \u2013 Aligning / Matching of Programs","text":"<p>Project 2.1 CFG-Based Alignment: Develop an automated alignment of the reference program and the submitted program based on the basic blocks of the programs\u2019 control-flow graph (CFG) representation. This also includes the development of an automated mapping for the variables between the reference program and the submitted program. \u2192 [Coding: Medium, Theory: Medium, Research: Low, HCI: -]</p>"},{"location":"courses/cs3213/project/topics.html#topic-3-error-localization-program-interpretation","title":"Topic 3 \u2013 Error Localization / Program Interpretation","text":"<p>Project 3.1 C Interpreter:  Develop an interpreter that allows to execute a C program with regard to the basic blocks in its CFG. Further, use the provided test cases to identify the root cause of the problem with regard to the basic blocks in the CFG. Implement an error localization that compares the execution traces of a reference program and the submitted program. \u2192 [Coding: High, Theory: Medium, Research: -, HCI: -]</p> <p>Project 3.2 Python Interpreter: same as 3.1 for Python \u2192 [Coding: High, Theory: Medium, Research: -, HCI: -]</p> <p>Project 3.3 Error Localizer: Conduct a literature study on error localization. Develop at least two error localization algorithms from different domains (e.g., statistical fault localization and analysis-based fault localization) for the provided framework and evaluate their efficacy.  \u2192 [Coding: Medium, Theory: High, Research: Low, HCI: -]</p>"},{"location":"courses/cs3213/project/topics.html#topic-4-transforming-repairing-programs","title":"Topic 4 \u2013 Transforming / Repairing Programs","text":"<p>Project 4.1 Refactoring-based Repair: Develop a repair workflow that first generates semantic-preserving refactorings of a reference program so that it increases the chances of a structural alignment with a submitted program (see Project 2.1). Afterwards, it uses a matching refactoring to repair the submitted program by mutating program expressions. Strive for a minimal repair which satisfies the failing test case(s). \u2192 [Coding: Medium, Theory: Medium, Research: Medium, HCI: -]</p> <p>Project 4.2 Optimization-based Repair: Develop a repair algorithm that (1) generates local repairs at each basic block by matching the submission and the reference solution, and (2) determines the complete repair (i.e., a subset of local repairs) by using some optimization strategy, which minimizes the overall repair cost. \u2192 [Coding: Medium-High, Theory: High, Research: Low, HCI: -]</p> <p>Project 4.3 Synthesis-based Repair: Develop a repair algorithm that searches for a repair by synthesizing program expressions. The synthesis will be driven by the available components at the specific source location. It requires a specification inference, which results in a repair constraint. \u2192 [Coding: Medium, Theory: High, Research: Medium, HCI: -]</p>"},{"location":"courses/cs3213/project/topics.html#topic-5-feedback-generation","title":"Topic 5 \u2013 Feedback Generation","text":"<p>Project 5.1 Automated Feedback: Develop a feedback mechanism to summarize all obtained results in an appropriate and comprehensible manner for the user. For example, show root causes of the problems and provide explanation by annotating the code. \u2192 [Coding: Low, Theory: Medium, Research: Medium, HCI: High]</p> <p>Project 5.2 Automated Grading: Develop a automated grading mechanism, which is beyond simple output of passing and failing test cases, e.g., it should take into account the necessary effort for fixing the submitted program. \u2192 [Coding: Low, Theory: High, Research: High, HCI: Low]</p>"},{"location":"courses/cs3213/project/workflow.html","title":"Workflow","text":"<p>The following steps show the intended workflow through the Intelligent Tutoring System (ITS). Note that there are points of variation (static and dynamic) that depend, e.g., on the programming language of the programming assignments and the intended repair strategies. Many of the current components can be implemented in many different ways.</p>"},{"location":"courses/cs3213/project/workflow.html#overview","title":"Overview","text":"<p>The Intelligent Tutoring System (ITS) uses the notion of a pipes-and-filter style to process the submitted program and, finally, to produce feedback for the students and a grading report for the tutor.</p> <p>All components provide corresponding interfaces to the extent that most components can be implemented independently from each other.</p> <p>This architecture also allows us to deploy specific system components as separate services. In this regard, the design borrows concepts from the service-oriented style. For example, we provide students with access to a Parser service that allows them to easily generate the internal CFG-based Program representation to create test cases for their projects.</p>"},{"location":"courses/cs3213/project/workflow.html#step-1-parser","title":"Step 1: Parser","text":""},{"location":"courses/cs3213/project/workflow.html#step-2-syntactic-alignment","title":"Step 2: Syntactic Alignment","text":""},{"location":"courses/cs3213/project/workflow.html#step-3-error-localizer","title":"Step 3: Error Localizer","text":""},{"location":"courses/cs3213/project/workflow.html#step-4-interpreter","title":"Step 4: Interpreter","text":""},{"location":"courses/cs3213/project/workflow.html#step-5-repair","title":"Step 5: Repair","text":""},{"location":"courses/cs3213/project/workflow.html#step-6-feedback","title":"Step 6: Feedback","text":""},{"location":"courses/cs3213/project/workflow.html#step-7-concretization","title":"Step 7: Concretization","text":""},{"location":"courses/cs3213/project/workflow.html#step-8-auto-grading","title":"Step 8: Auto-Grading","text":""},{"location":"documentation/components.html","title":"Components in Intelligent Tutoring System","text":"Figure 1: Overview of the workflow of the Intelligent Tutoring System."},{"location":"documentation/components.html#language-parser","title":"Language Parser","text":"<p>To support multiple programming languages, we designed an internal intermediate program representation capable of expressing the majority of first-year-level syntax and semantics, such as variable declarations, control structures, and basic data types. This intermediate representation ensures that the core functionalities of the ITS can operate independently of the programming language used. For example, it enables lightweight program analyses, such as control flow, variable usage, and data dependency analysis. As the first step in the workflow, the ITS runs a grammar checker to identify the programming language of the current feedback request. Next, the parser component processes the source code of both the reference program and the student\u2019s submission. It invokes the corresponding language-specific parser to generate the intermediate representation of the programs. This representation standardizes the code into a common format used by other components, which allows the ITS to function consistently across different languages. Currently, the parser component includes specific parsers for C, Java, and Python.</p>"},{"location":"documentation/components.html#alignment","title":"Alignment","text":"<p>One key difference between general program repair for large software and program repair for educational purposes is the availability of an expected program specification in the form of a reference implementation. The alignment component is designed to align the reference program with the student\u2019s submission. It processes the intermediate representations of both the reference and student programs to identify matching basic blocks and map the existing variables for each function within the programs. The alignment algorithms are based on the similarity of control flow and variable usage, specifically using Def-Use Analysis, to compare the reference and student programs. The results of this alignment can then be used to pinpoint the locations where the reference and submitted programs diverge in behavior. Furthermore, this information is instrumental in attempting to repair the submitted program by leveraging the data from the reference program. Note that, the ITS takes in multiple reference solutions with different solving strategies as input which increases the alignment success rate like existing APR tools.</p>"},{"location":"documentation/components.html#error-localizer-and-interpreter","title":"Error Localizer and Interpreter","text":"<p>Error localization is a crucial step in APR systems that aims to identify the buggy locations within the software. In the context of computer programming education, error localization identifies specific basic blocks or expressions that violate the expected specifications. The error localizer component employs several dynamic execution-enabled localization algorithms to trigger erroneous behavior in the student\u2019s program. These algorithms include trace-based localization and statistical fault localization. The dynamic program execution is facilitated by an interpreter component. This interpreter allows the execution of a program in its intermediate CFG-based representation without the need for compilation or execution on the actual system. It generates an execution trace with the sequence of executed basic blocks and a memory object, which holds the variable values at specific locations. The error localizer component utilizes the interpreter to execute test cases while observing the variable values at specific locations. This process enables the system to detect semantic differences between the reference and submitted programs, thereby pinpointing the precise locations of errors.</p>"},{"location":"documentation/components.html#repair-engines","title":"Repair Engines","text":"<p>Given the reference programs, student submissions, and the identified error locations as input, the repair component attempts to fix the submitted programs by generating edits that transform the student\u2019s program to be semantically equivalent to the reference program. The repair component acts as an engine that can utilize various repair strategies, such as optimization-based repair, synthesis-based repair, and LLM-based repair. Upon receiving a repair request from the previous components, these repair strategies are invoked in parallel to search for potential repair candidates. The repair engine then selects the optimal repair candidate that minimally alters the student\u2019s submission. This approach aims to guide students in correcting their mistakes while preserving their original intentions as much as possible. Note that, the repair candidate is represented at the level of the intermediate representation of the program, and we convert it back to the source code before proceeding to the feedback generation phase.</p>"},{"location":"documentation/components.html#feedback-generators","title":"Feedback Generators","text":"<p>With the collected information from previous components, the feedback component generates natural language explanations to guide students in correcting their mistakes without revealing the direct answer. This component incorporates a common front-end prompt interface with various LLM backends, allowing flexible switching between different LLMs and easy integration of new LLMs. Currently, it supports both commercial LLMs like GPT and Claude series, as well as open-source LLMs like LLaMA from Meta. We use GPT-3.5 as the default LLM backend to balance performance and cost.</p>"},{"location":"documentation/components.html#automated-grader","title":"Automated Grader","text":"<p>Test-suite based automated grading suffers from the problem that a small mistake by the student can cause many test cases to fail. To provide better support for tutors, we integrate an auto-grading capability in the ITS, which aims to test the conceptual understanding of the student and awards grades accordingly. This is achieved by constructing a concept graph from the student's attempt and comparing it with the concept graph of the instructor's reference solution. The aim is to automatically determine which of the ingredient concepts being tested by the programming assignment are correctly understood by the student. Given the instructor-provided reference solutions and students' incorrect solutions, we apply the abstraction rules to convert students' concrete implementation to conceptual understandings and compare them against the conceptual requirements in reference solutions. Based on the result, the grading component generates a grading report for the tutor. It assesses the student's submission by their missing or improperly used programming concepts to address the over-penalty issue in the conventional test-based assessment.</p>"},{"location":"documentation/overview.html","title":"Overview","text":"Figure 1: Overview of the workflow of the Intelligent Tutoring System."},{"location":"documentation/overview.html#features","title":"Features","text":""},{"location":"getting-started/api.html","title":"API Endpoints","text":"<p>We provide a set of RESTful APIs to interact with each module of the Intelligent Tutoring System (ITS), so that ITS can be easily integrated and customized with any teaching system/platform.  This page includes the API documentation for the Intelligent Tutoring System (ITS) for Programming and Algorithms Education. To access demo API endpoints or apply for a local deployment at your institution, please contact us for support.</p>"},{"location":"getting-started/api.html#parser-api","title":"Parser API","text":"<p>The ITS parser generate parsed result of input source code in ITS intermediate representation.</p> <p>Request Format: - language: A string representing the programming language of the source code. The API supports \"c\", \"python\", or \"java\". - source_code: A string containing the source code that needs to be processed.</p> <p>Example Request Body: <pre><code>{\n  \"language\": \"python\",\n  \"source_code\": \"def is_odd(x):\\n\\tif x % 2 == 0:\\n\\t\\treturn False\\n\\telse:\\n\\t\\treturn True\"\n}\n</code></pre></p> <p>Response: Intermediate representation of the input source code in JSON format.</p> <p>Example Successful Response: The below JSON response is an example of the intermediate representation of the input source code in JSON format.  </p> <pre><code>{\n  \"importStatements\": [],\n  \"fncs\": {\n    \"is_odd\": {\n      \"name\": \"is_odd\",\n      \"rettype\": \"*\",\n      \"initloc\": 1,\n      \"endloc\": 0,\n      \"params\": [\n        {\n          \"val0\": \"x\",\n          \"val1\": \"*\",\n          \"valueArray\": [\n            \"x\",\n            \"*\"\n          ],\n          \"valueList\": [\n            \"x\",\n            \"*\"\n          ]\n        }\n      ],\n      \"locexprs\": {\n        \"1\": [\n          {\n            \"val0\": \"$ret\",\n            \"val1\": {\n              \"name\": \"ite\",\n              \"args\": [\n                {\n                  \"name\": \"Eq\",\n                  \"args\": [\n                    {\n                      \"name\": \"Mod\",\n                      \"args\": [\n                        {\n                          \"name\": \"x\",\n                          \"primed\": false,\n                          \"line\": 2,\n                          \"tokentype\": \"Variable\"\n                        },\n                        {\n                          \"value\": \"2\",\n                          \"line\": 2,\n                          \"tokentype\": \"Constant\"\n                        }\n                      ],\n                      \"line\": 2,\n                      \"tokentype\": \"Operation\"\n                    },\n                    {\n                      \"value\": \"0\",\n                      \"line\": 2,\n                      \"tokentype\": \"Constant\"\n                    }\n                  ],\n                  \"line\": 2,\n                  \"tokentype\": \"Operation\"\n                },\n                {\n                  \"value\": \"False\",\n                  \"line\": 3,\n                  \"tokentype\": \"Constant\"\n                },\n                {\n                  \"value\": \"True\",\n                  \"line\": 5,\n                  \"tokentype\": \"Constant\"\n                }\n              ],\n              \"line\": 2,\n              \"tokentype\": \"Operation\"\n            },\n            \"valueArray\": [\n              \"$ret\",\n              {\n                \"name\": \"ite\",\n                \"args\": [\n                  {\n                    \"name\": \"Eq\",\n                    \"args\": [\n                      {\n                        \"name\": \"Mod\",\n                        \"args\": [\n                          {\n                            \"name\": \"x\",\n                            \"primed\": false,\n                            \"line\": 2,\n                            \"tokentype\": \"Variable\"\n                          },\n                          {\n                            \"value\": \"2\",\n                            \"line\": 2,\n                            \"tokentype\": \"Constant\"\n                          }\n                        ],\n                        \"line\": 2,\n                        \"tokentype\": \"Operation\"\n                      },\n                      {\n                        \"value\": \"0\",\n                        \"line\": 2,\n                        \"tokentype\": \"Constant\"\n                      }\n                    ],\n                    \"line\": 2,\n                    \"tokentype\": \"Operation\"\n                  },\n                  {\n                    \"value\": \"False\",\n                    \"line\": 3,\n                    \"tokentype\": \"Constant\"\n                  },\n                  {\n                    \"value\": \"True\",\n                    \"line\": 5,\n                    \"tokentype\": \"Constant\"\n                  }\n                ],\n                \"line\": 2\n              }\n            ],\n            \"valueList\": [\n              \"$ret\",\n              {\n                \"name\": \"ite\",\n                \"args\": [\n                  {\n                    \"name\": \"Eq\",\n                    \"args\": [\n                      {\n                        \"name\": \"Mod\",\n                        \"args\": [\n                          {\n                            \"name\": \"x\",\n                            \"primed\": false,\n                            \"line\": 2,\n                            \"tokentype\": \"Variable\"\n                          },\n                          {\n                            \"value\": \"2\",\n                            \"line\": 2,\n                            \"tokentype\": \"Constant\"\n                          }\n                        ],\n                        \"line\": 2,\n                        \"tokentype\": \"Operation\"\n                      },\n                      {\n                        \"value\": \"0\",\n                        \"line\": 2,\n                        \"tokentype\": \"Constant\"\n                      }\n                    ],\n                    \"line\": 2,\n                    \"tokentype\": \"Operation\"\n                  },\n                  {\n                    \"value\": \"False\",\n                    \"line\": 3,\n                    \"tokentype\": \"Constant\"\n                  },\n                  {\n                    \"value\": \"True\",\n                    \"line\": 5,\n                    \"tokentype\": \"Constant\"\n                  }\n                ],\n                \"line\": 2\n              }\n            ]\n          }\n        ]\n      },\n      \"loctrans\": {\n        \"1\": {}\n      },\n      \"locdescs\": {\n        \"1\": \"around the beginning of function 'is_odd'\"\n      },\n      \"types\": {}\n    }\n  }\n}\n</code></pre>"},{"location":"getting-started/api.html#structural-alignment-api","title":"Structural Alignment API","text":"<p>Request Format: - reference_solution: A list of string containing the response of the Parser API for the reference solutions. - student_solution: A string containing the response of the Parser API for the student solution.</p> <p>Example Request Body:</p> <pre><code>{\n  \"reference_solution\": \"{\\\"importStatements\\\":[],\\\"fncs\\\":{\\\"computeDeriv\\\":{\\\"name\\\":\\\"computeDeriv\\\",\\\"rettype\\\":\\\"*\\\",\\\"initloc\\\":1,\\\"endloc\\\":0,\\\"params\\\":[{\\\"val0\\\":\\\"poly\\\",\\\"val1\\\":\\\"*\\\",\\\"valueArray\\\":[\\\"poly\\\",\\\"*\\\"],\\\"valueList\\\":[\\\"poly\\\",\\\"*\\\"]}],\\\"locexprs\\\":{\\\"1\\\":[{\\\"val0\\\":\\\"result\\\",\\\"val1\\\":{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"result\\\",{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2}],\\\"valueList\\\":[\\\"result\\\",{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2}]},{\\\"val0\\\":\\\"iter#0\\\",\\\"val1\\\":{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"iter#0\\\",{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"iter#0\\\",{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"ind#0\\\",\\\"val1\\\":{\\\"value\\\":\\\"0\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},\\\"valueArray\\\":[\\\"ind#0\\\",{\\\"value\\\":\\\"0\\\",\\\"line\\\":3}],\\\"valueList\\\":[\\\"ind#0\\\",{\\\"value\\\":\\\"0\\\",\\\"line\\\":3}]}],\\\"2\\\":[{\\\"val0\\\":\\\"$cond\\\",\\\"val1\\\":{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$cond\\\",{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"$cond\\\",{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}]}],\\\"3\\\":[{\\\"val0\\\":\\\"$ret\\\",\\\"val1\\\":{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6}],\\\"valueList\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6}]}],\\\"4\\\":[{\\\"val0\\\":\\\"e\\\",\\\"val1\\\":{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"e\\\",{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"e\\\",{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"ind#0\\\",\\\"val1\\\":{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"ind#0\\\",{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"ind#0\\\",{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"result\\\",\\\"val1\\\":{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"result\\\",{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4}],\\\"valueList\\\":[\\\"result\\\",{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4}]}]},\\\"loctrans\\\":{\\\"1\\\":{\\\"true\\\":2},\\\"2\\\":{\\\"false\\\":3,\\\"true\\\":4},\\\"3\\\":{},\\\"4\\\":{\\\"true\\\":2}},\\\"locdescs\\\":{\\\"1\\\":\\\"around the beginning of function 'computeDeriv'\\\",\\\"2\\\":\\\"the condition of the 'for' loop at line 3\\\",\\\"3\\\":\\\"*after* the 'for' loop starting at line 3\\\",\\\"4\\\":\\\"inside the body of the 'for' loop beginning at line 4\\\"},\\\"types\\\":{\\\"result\\\":\\\"*\\\",\\\"e\\\":\\\"*\\\",\\\"ind#0\\\":\\\"int\\\",\\\"iter#0\\\":\\\"int\\\"}}}}\",\n  \"student_solution\": \"{\\\"importStatements\\\":[],\\\"fncs\\\":{\\\"computeDeriv\\\":{\\\"name\\\":\\\"computeDeriv\\\",\\\"rettype\\\":\\\"*\\\",\\\"initloc\\\":1,\\\"endloc\\\":0,\\\"params\\\":[{\\\"val0\\\":\\\"poly\\\",\\\"val1\\\":\\\"*\\\",\\\"valueArray\\\":[\\\"poly\\\",\\\"*\\\"],\\\"valueList\\\":[\\\"poly\\\",\\\"*\\\"]}],\\\"locexprs\\\":{\\\"1\\\":[{\\\"val0\\\":\\\"output\\\",\\\"val1\\\":{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"output\\\",{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2}],\\\"valueList\\\":[\\\"output\\\",{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2}]},{\\\"val0\\\":\\\"iter#0\\\",\\\"val1\\\":{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"iter#0\\\",{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"iter#0\\\",{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"ind#0\\\",\\\"val1\\\":{\\\"value\\\":\\\"0\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},\\\"valueArray\\\":[\\\"ind#0\\\",{\\\"value\\\":\\\"0\\\",\\\"line\\\":3}],\\\"valueList\\\":[\\\"ind#0\\\",{\\\"value\\\":\\\"0\\\",\\\"line\\\":3}]}],\\\"2\\\":[{\\\"val0\\\":\\\"$cond\\\",\\\"val1\\\":{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$cond\\\",{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"$cond\\\",{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}]}],\\\"3\\\":[{\\\"val0\\\":\\\"$ret\\\",\\\"val1\\\":{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6}],\\\"valueList\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6}]}],\\\"4\\\":[{\\\"val0\\\":\\\"e\\\",\\\"val1\\\":{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"e\\\",{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"e\\\",{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"ind#0\\\",\\\"val1\\\":{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"ind#0\\\",{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"ind#0\\\",{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"output\\\",\\\"val1\\\":{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"output\\\",{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4}],\\\"valueList\\\":[\\\"output\\\",{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4}]}]},\\\"loctrans\\\":{\\\"1\\\":{\\\"true\\\":2},\\\"2\\\":{\\\"false\\\":3,\\\"true\\\":4},\\\"3\\\":{},\\\"4\\\":{\\\"true\\\":2}},\\\"locdescs\\\":{\\\"1\\\":\\\"around the beginning of function 'computeDeriv'\\\",\\\"2\\\":\\\"the condition of the 'for' loop at line 3\\\",\\\"3\\\":\\\"*after* the 'for' loop starting at line 3\\\",\\\"4\\\":\\\"inside the body of the 'for' loop beginning at line 4\\\"},\\\"types\\\":{\\\"output\\\":\\\"*\\\",\\\"e\\\":\\\"*\\\",\\\"ind#0\\\":\\\"int\\\",\\\"iter#0\\\":\\\"int\\\"}}}}\"\n}\n</code></pre> <p>Response: The structural alignment result of the reference and student solutions in JSON format. This structure alignment result is used to identify the matching basic blocks for each function inside the reference and student solutions. Along with the variable alignment result, they are used to pinpoint the equivalent program specifications at function level for each function inside the reference and student solutions.</p> <p>Example Successful Response: The below JSON response is an example of structural alignment result of the <code>computeDeriv</code> function in the reference and student solutions in JSON format.  </p> <pre><code>{\n  \"mapping\": {\n    \"computeDeriv\": {\n      \"1\": 1,\n      \"2\": 2,\n      \"3\": 3,\n      \"4\": 4\n    }\n  }\n}\n</code></pre>"},{"location":"getting-started/api.html#variable-alignment-api","title":"Variable Alignment API","text":"<p>Request Format: - reference_solution: A list of string containing the response of the Parser API for the reference solutions. - student_solution: A string containing the response of the Parser API for the student solution. - structural_alignment: string (structural alignment result)</p> <p>Example Request Body: <pre><code>{\n  \"reference_solution\": \"{\\\"importStatements\\\":[],\\\"fncs\\\":{\\\"computeDeriv\\\":{\\\"name\\\":\\\"computeDeriv\\\",\\\"rettype\\\":\\\"*\\\",\\\"initloc\\\":1,\\\"endloc\\\":0,\\\"params\\\":[{\\\"val0\\\":\\\"poly\\\",\\\"val1\\\":\\\"*\\\",\\\"valueArray\\\":[\\\"poly\\\",\\\"*\\\"],\\\"valueList\\\":[\\\"poly\\\",\\\"*\\\"]}],\\\"locexprs\\\":{\\\"1\\\":[{\\\"val0\\\":\\\"result\\\",\\\"val1\\\":{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"result\\\",{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2}],\\\"valueList\\\":[\\\"result\\\",{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2}]},{\\\"val0\\\":\\\"iter#0\\\",\\\"val1\\\":{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"iter#0\\\",{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"iter#0\\\",{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"ind#0\\\",\\\"val1\\\":{\\\"value\\\":\\\"0\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},\\\"valueArray\\\":[\\\"ind#0\\\",{\\\"value\\\":\\\"0\\\",\\\"line\\\":3}],\\\"valueList\\\":[\\\"ind#0\\\",{\\\"value\\\":\\\"0\\\",\\\"line\\\":3}]}],\\\"2\\\":[{\\\"val0\\\":\\\"$cond\\\",\\\"val1\\\":{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$cond\\\",{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"$cond\\\",{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}]}],\\\"3\\\":[{\\\"val0\\\":\\\"$ret\\\",\\\"val1\\\":{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6}],\\\"valueList\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6}]}],\\\"4\\\":[{\\\"val0\\\":\\\"e\\\",\\\"val1\\\":{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"e\\\",{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"e\\\",{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"ind#0\\\",\\\"val1\\\":{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"ind#0\\\",{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"ind#0\\\",{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"result\\\",\\\"val1\\\":{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"result\\\",{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4}],\\\"valueList\\\":[\\\"result\\\",{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"result\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4}]}]},\\\"loctrans\\\":{\\\"1\\\":{\\\"true\\\":2},\\\"2\\\":{\\\"false\\\":3,\\\"true\\\":4},\\\"3\\\":{},\\\"4\\\":{\\\"true\\\":2}},\\\"locdescs\\\":{\\\"1\\\":\\\"around the beginning of function 'computeDeriv'\\\",\\\"2\\\":\\\"the condition of the 'for' loop at line 3\\\",\\\"3\\\":\\\"*after* the 'for' loop starting at line 3\\\",\\\"4\\\":\\\"inside the body of the 'for' loop beginning at line 4\\\"},\\\"types\\\":{\\\"result\\\":\\\"*\\\",\\\"e\\\":\\\"*\\\",\\\"ind#0\\\":\\\"int\\\",\\\"iter#0\\\":\\\"int\\\"}}}}\",\n  \"student_solution\": \"{\\\"importStatements\\\":[],\\\"fncs\\\":{\\\"computeDeriv\\\":{\\\"name\\\":\\\"computeDeriv\\\",\\\"rettype\\\":\\\"*\\\",\\\"initloc\\\":1,\\\"endloc\\\":0,\\\"params\\\":[{\\\"val0\\\":\\\"poly\\\",\\\"val1\\\":\\\"*\\\",\\\"valueArray\\\":[\\\"poly\\\",\\\"*\\\"],\\\"valueList\\\":[\\\"poly\\\",\\\"*\\\"]}],\\\"locexprs\\\":{\\\"1\\\":[{\\\"val0\\\":\\\"output\\\",\\\"val1\\\":{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"output\\\",{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2}],\\\"valueList\\\":[\\\"output\\\",{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":2}]},{\\\"val0\\\":\\\"iter#0\\\",\\\"val1\\\":{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"iter#0\\\",{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"iter#0\\\",{\\\"name\\\":\\\"range\\\",\\\"args\\\":[{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"ind#0\\\",\\\"val1\\\":{\\\"value\\\":\\\"0\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},\\\"valueArray\\\":[\\\"ind#0\\\",{\\\"value\\\":\\\"0\\\",\\\"line\\\":3}],\\\"valueList\\\":[\\\"ind#0\\\",{\\\"value\\\":\\\"0\\\",\\\"line\\\":3}]}],\\\"2\\\":[{\\\"val0\\\":\\\"$cond\\\",\\\"val1\\\":{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$cond\\\",{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"$cond\\\",{\\\"name\\\":\\\"Lt\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"len\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":3}]}],\\\"3\\\":[{\\\"val0\\\":\\\"$ret\\\",\\\"val1\\\":{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6}],\\\"valueList\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":6,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":6,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"ListInit\\\",\\\"args\\\":[{\\\"value\\\":\\\"0.0\\\",\\\"line\\\":7,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":7,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":9,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":6}]}],\\\"4\\\":[{\\\"val0\\\":\\\"e\\\",\\\"val1\\\":{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"e\\\",{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"e\\\",{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"iter#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"ind#0\\\",\\\"val1\\\":{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"ind#0\\\",{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3}],\\\"valueList\\\":[\\\"ind#0\\\",{\\\"name\\\":\\\"Add\\\",\\\"args\\\":[{\\\"name\\\":\\\"ind#0\\\",\\\"primed\\\":false,\\\"line\\\":3,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":3}]},{\\\"val0\\\":\\\"output\\\",\\\"val1\\\":{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"output\\\",{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4}],\\\"valueList\\\":[\\\"output\\\",{\\\"name\\\":\\\"append\\\",\\\"args\\\":[{\\\"name\\\":\\\"output\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"float\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mult\\\",\\\"args\\\":[{\\\"name\\\":\\\"GetElement\\\",\\\"args\\\":[{\\\"name\\\":\\\"poly\\\",\\\"primed\\\":false,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"name\\\":\\\"e\\\",\\\"primed\\\":true,\\\"line\\\":4,\\\"tokentype\\\":\\\"Variable\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4,\\\"tokentype\\\":\\\"Operation\\\"}],\\\"line\\\":4}]}]},\\\"loctrans\\\":{\\\"1\\\":{\\\"true\\\":2},\\\"2\\\":{\\\"false\\\":3,\\\"true\\\":4},\\\"3\\\":{},\\\"4\\\":{\\\"true\\\":2}},\\\"locdescs\\\":{\\\"1\\\":\\\"around the beginning of function 'computeDeriv'\\\",\\\"2\\\":\\\"the condition of the 'for' loop at line 3\\\",\\\"3\\\":\\\"*after* the 'for' loop starting at line 3\\\",\\\"4\\\":\\\"inside the body of the 'for' loop beginning at line 4\\\"},\\\"types\\\":{\\\"output\\\":\\\"*\\\",\\\"e\\\":\\\"*\\\",\\\"ind#0\\\":\\\"int\\\",\\\"iter#0\\\":\\\"int\\\"}}}}\",\n  \"structural_alignment\": \"{\\\"mapping\\\":{\\\"computeDeriv\\\":{\\\"1\\\":1,\\\"2\\\":2,\\\"3\\\":3,\\\"4\\\":4}}}\"\n}\n</code></pre></p> <p>Response: The variable alignment result of the reference and student solutions in JSON format. This variable alignment result is used to identify the matching variables for each function inside the reference and student solutions. Along with the structural alignment result, they are used to pinpoint the equivalent program specifications at function level for each function inside the reference and student solutions.</p> <p>Example Successful Response: The below JSON response is an example of variable alignment result of the <code>computeDeriv</code> function in the reference and student solutions in JSON format.</p> <pre><code>{\n  \"mappingByFunctionName\": {\n    \"computeDeriv\": [\n      [\n        [\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"result\",\n            \"primed\": false,\n            \"line\": 6\n          },\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"output\",\n            \"primed\": false,\n            \"line\": 6\n          }\n        ],\n        [\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"$cond\",\n            \"primed\": false,\n            \"line\": 0\n          },\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"$cond\",\n            \"primed\": false,\n            \"line\": 0\n          }\n        ],\n        [\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"e\",\n            \"primed\": false,\n            \"line\": 4\n          },\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"e\",\n            \"primed\": false,\n            \"line\": 4\n          }\n        ],\n        [\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"$ret\",\n            \"primed\": false,\n            \"line\": 0\n          },\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"$ret\",\n            \"primed\": false,\n            \"line\": 0\n          }\n        ],\n        [\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"$out\",\n            \"primed\": false,\n            \"line\": 0\n          },\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"$out\",\n            \"primed\": false,\n            \"line\": 0\n          }\n        ],\n        [\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"poly\",\n            \"primed\": false,\n            \"line\": 3\n          },\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"poly\",\n            \"primed\": false,\n            \"line\": 3\n          }\n        ],\n        [\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"iter#0\",\n            \"primed\": false,\n            \"line\": 3\n          },\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"iter#0\",\n            \"primed\": false,\n            \"line\": 3\n          }\n        ],\n        [\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"$in\",\n            \"primed\": false,\n            \"line\": 0\n          },\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"$in\",\n            \"primed\": false,\n            \"line\": 0\n          }\n        ],\n        [\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"ind#0\",\n            \"primed\": false,\n            \"line\": 3\n          },\n          {\n            \"tokentype\": \"Variable\",\n            \"name\": \"ind#0\",\n            \"primed\": false,\n            \"line\": 3\n          }\n        ]\n      ]\n    ]\n  }\n}\n</code></pre>"},{"location":"getting-started/api.html#error-localizer-and-interpreter-api","title":"Error Localizer and Interpreter API","text":"<p>Request Format: - language: A string representing the programming language of the source code. The API supports \"c\", \"python\", or \"java\". - reference_solution: A list of string containing the response of the Parser API for the reference solutions. - student_solution: A string containing the response of the Parser API for the student solution. - function: A string represents entry function name of the programming assignment. - inputs: A string represents IO inputs of the programs. - args: A string represent argument inputs of the entry function.</p> <p>Example Request Body: <pre><code>{\n  \"language\": \"python\",\n  \"reference_solution\": \"{\\\"importStatements\\\":[],\\\"fncs\\\":{\\\"is_odd\\\":{\\\"name\\\":\\\"is_odd\\\",\\\"rettype\\\":\\\"*\\\",\\\"initloc\\\":1,\\\"endloc\\\":0,\\\"params\\\":[{\\\"val0\\\":\\\"x\\\",\\\"val1\\\":\\\"*\\\",\\\"valueArray\\\":[\\\"x\\\",\\\"*\\\"],\\\"valueList\\\":[\\\"x\\\",\\\"*\\\"]}],\\\"locexprs\\\":{\\\"1\\\":[{\\\"val0\\\":\\\"$ret\\\",\\\"val1\\\":{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mod\\\",\\\"args\\\":[{\\\"name\\\":\\\"x\\\",\\\"primed\\\":false,\\\"line\\\":2,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"2\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"0\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"False\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"value\\\":\\\"True\\\",\\\"line\\\":5,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mod\\\",\\\"args\\\":[{\\\"name\\\":\\\"x\\\",\\\"primed\\\":false,\\\"line\\\":2,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"2\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"0\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"False\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"value\\\":\\\"True\\\",\\\"line\\\":5,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2}],\\\"valueList\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mod\\\",\\\"args\\\":[{\\\"name\\\":\\\"x\\\",\\\"primed\\\":false,\\\"line\\\":2,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"2\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"0\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"False\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"value\\\":\\\"True\\\",\\\"line\\\":5,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2}]}]},\\\"loctrans\\\":{\\\"1\\\":{}},\\\"locdescs\\\":{\\\"1\\\":\\\"around the beginning of function 'is_odd'\\\"},\\\"types\\\":{}}}}\",\n  \"student_solution\": \"{\\\"importStatements\\\":[],\\\"fncs\\\":{\\\"is_odd\\\":{\\\"name\\\":\\\"is_odd\\\",\\\"rettype\\\":\\\"*\\\",\\\"initloc\\\":1,\\\"endloc\\\":0,\\\"params\\\":[{\\\"val0\\\":\\\"x\\\",\\\"val1\\\":\\\"*\\\",\\\"valueArray\\\":[\\\"x\\\",\\\"*\\\"],\\\"valueList\\\":[\\\"x\\\",\\\"*\\\"]}],\\\"locexprs\\\":{\\\"1\\\":[{\\\"val0\\\":\\\"$ret\\\",\\\"val1\\\":{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mod\\\",\\\"args\\\":[{\\\"name\\\":\\\"x\\\",\\\"primed\\\":false,\\\"line\\\":2,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"2\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"False\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"value\\\":\\\"True\\\",\\\"line\\\":5,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},\\\"valueArray\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mod\\\",\\\"args\\\":[{\\\"name\\\":\\\"x\\\",\\\"primed\\\":false,\\\"line\\\":2,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"2\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"False\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"value\\\":\\\"True\\\",\\\"line\\\":5,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2}],\\\"valueList\\\":[\\\"$ret\\\",{\\\"name\\\":\\\"ite\\\",\\\"args\\\":[{\\\"name\\\":\\\"Eq\\\",\\\"args\\\":[{\\\"name\\\":\\\"Mod\\\",\\\"args\\\":[{\\\"name\\\":\\\"x\\\",\\\"primed\\\":false,\\\"line\\\":2,\\\"tokentype\\\":\\\"Variable\\\"},{\\\"value\\\":\\\"2\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"1\\\",\\\"line\\\":2,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2,\\\"tokentype\\\":\\\"Operation\\\"},{\\\"value\\\":\\\"False\\\",\\\"line\\\":3,\\\"tokentype\\\":\\\"Constant\\\"},{\\\"value\\\":\\\"True\\\",\\\"line\\\":5,\\\"tokentype\\\":\\\"Constant\\\"}],\\\"line\\\":2}]}]},\\\"loctrans\\\":{\\\"1\\\":{}},\\\"locdescs\\\":{\\\"1\\\":\\\"around the beginning of function 'is_odd'\\\"},\\\"types\\\":{}}}}\",\n  \"function\": \"is_odd\",\n  \"inputs\": \"\",\n  \"args\": \"[2]\"\n}\n</code></pre></p> <p>Response: The response contains the identified error locations of the reference and student solutions in JSON format. </p> <p>Example Successful Response: The below JSON response is an example of identified error location of the <code>is_odd</code> function in the reference and student solutions in JSON format.</p> <pre><code>{\n  \"errorLocations\": {\n    \"is_odd\": [\n      [\n        [\n          [\n            {\n              \"tokentype\": \"Variable\",\n              \"name\": \"$ret\",\n              \"primed\": \"false\",\n              \"line\": 0\n            },\n            {\n              \"tokentype\": \"Variable\",\n              \"name\": \"$ret\",\n              \"primed\": \"false\",\n              \"line\": 0\n            }\n          ],\n          [\n            {\n              \"tokentype\": \"Variable\",\n              \"name\": \"$out\",\n              \"primed\": \"false\",\n              \"line\": 0\n            },\n            {\n              \"tokentype\": \"Variable\",\n              \"name\": \"$out\",\n              \"primed\": \"false\",\n              \"line\": 0\n            }\n          ],\n          [\n            {\n              \"tokentype\": \"Variable\",\n              \"name\": \"x\",\n              \"primed\": \"false\",\n              \"line\": 2\n            },\n            {\n              \"tokentype\": \"Variable\",\n              \"name\": \"x\",\n              \"primed\": \"false\",\n              \"line\": 2\n            }\n          ],\n          [\n            {\n              \"tokentype\": \"Variable\",\n              \"name\": \"$in\",\n              \"primed\": \"false\",\n              \"line\": 0\n            },\n            {\n              \"tokentype\": \"Variable\",\n              \"name\": \"$in\",\n              \"primed\": \"false\",\n              \"line\": 0\n            }\n          ]\n        ],\n        [\n          {\n            \"errorType\": \"VariableValueMismatch\",\n            \"locationInReference\": 1,\n            \"locationInSubmission\": 1,\n            \"erroneousVariablesInSubmission\": [\n              {\n                \"tokentype\": \"Variable\",\n                \"name\": \"$ret\",\n                \"primed\": \"false\",\n                \"line\": 0\n              }\n            ]\n          }\n        ]\n      ]\n    ]\n  },\n  \"errorInputs\": []\n}\n</code></pre>"},{"location":"getting-started/api.html#repair-engines-api","title":"Repair Engines API","text":"<p>Request Format: - language: A string representing the programming language of the source code. The API supports \"c\", \"python\", or \"java\". - reference_solution: A list of string containing the response of the Parser API for the reference solutions. - student_solution: A string containing the response of the Parser API for the student solution. - function: A string represents entry function name of the programming assignment. - inputs: A string represents IO inputs of the programs. - args: A string represent argument inputs of the entry function.</p> <p>Example Request Body:</p> <pre><code>{\n  \"language\": \"python\",\n  \"reference_solution\": \"{\\n    \\\"importStatements\\\": [],\\n    \\\"fncs\\\": {\\n        \\\"main\\\": {\\n            \\\"name\\\": \\\"main\\\",\\n            \\\"rettype\\\": \\\"*\\\",\\n            \\\"initloc\\\": 1,\\n            \\\"endloc\\\": 0,\\n            \\\"params\\\": [],\\n            \\\"locexprs\\\": {\\n                \\\"1\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"a\\\",\\n                        \\\"val1\\\": {\\n                            \\\"value\\\": \\\"10\\\",\\n                            \\\"line\\\": 2,\\n                            \\\"tokentype\\\": \\\"Constant\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"a\\\",\\n                            {\\n                                \\\"value\\\": \\\"10\\\",\\n                                \\\"line\\\": 2\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"a\\\",\\n                            {\\n                                \\\"value\\\": \\\"10\\\",\\n                                \\\"line\\\": 2\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"b\\\",\\n                        \\\"val1\\\": {\\n                            \\\"value\\\": \\\"0\\\",\\n                            \\\"line\\\": 3,\\n                            \\\"tokentype\\\": \\\"Constant\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 3\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 3\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"iter#0\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"range\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"value\\\": \\\"0\\\",\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Constant\\\"\\n                                },\\n                                {\\n                                    \\\"name\\\": \\\"a\\\",\\n                                    \\\"primed\\\": true,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"iter#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"range\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"value\\\": \\\"0\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"a\\\",\\n                                        \\\"primed\\\": true,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"iter#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"range\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"value\\\": \\\"0\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"a\\\",\\n                                        \\\"primed\\\": true,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"ind#0\\\",\\n                        \\\"val1\\\": {\\n                            \\\"value\\\": \\\"0\\\",\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Constant\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    }\\n                ],\\n                \\\"2\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"$cond\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"Lt\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"ind#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"name\\\": \\\"len\\\",\\n                                    \\\"args\\\": [\\n                                        {\\n                                            \\\"name\\\": \\\"iter#0\\\",\\n                                            \\\"primed\\\": false,\\n                                            \\\"line\\\": 4,\\n                                            \\\"tokentype\\\": \\\"Variable\\\"\\n                                        }\\n                                    ],\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Operation\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"$cond\\\",\\n                            {\\n                                \\\"name\\\": \\\"Lt\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"len\\\",\\n                                        \\\"args\\\": [\\n                                            {\\n                                                \\\"name\\\": \\\"iter#0\\\",\\n                                                \\\"primed\\\": false,\\n                                                \\\"line\\\": 4,\\n                                                \\\"tokentype\\\": \\\"Variable\\\"\\n                                            }\\n                                        ],\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Operation\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"$cond\\\",\\n                            {\\n                                \\\"name\\\": \\\"Lt\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"len\\\",\\n                                        \\\"args\\\": [\\n                                            {\\n                                                \\\"name\\\": \\\"iter#0\\\",\\n                                                \\\"primed\\\": false,\\n                                                \\\"line\\\": 4,\\n                                                \\\"tokentype\\\": \\\"Variable\\\"\\n                                            }\\n                                        ],\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Operation\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    }\\n                ],\\n                \\\"3\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"$ret\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"b\\\",\\n                            \\\"primed\\\": false,\\n                            \\\"line\\\": 6,\\n                            \\\"tokentype\\\": \\\"Variable\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"$ret\\\",\\n                            {\\n                                \\\"name\\\": \\\"b\\\",\\n                                \\\"primed\\\": false,\\n                                \\\"line\\\": 6\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"$ret\\\",\\n                            {\\n                                \\\"name\\\": \\\"b\\\",\\n                                \\\"primed\\\": false,\\n                                \\\"line\\\": 6\\n                            }\\n                        ]\\n                    }\\n                ],\\n                \\\"4\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"i\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"GetElement\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"iter#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"name\\\": \\\"ind#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"i\\\",\\n                            {\\n                                \\\"name\\\": \\\"GetElement\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"iter#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"i\\\",\\n                            {\\n                                \\\"name\\\": \\\"GetElement\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"iter#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"ind#0\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"Add\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"ind#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"value\\\": \\\"1\\\",\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Constant\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"Add\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"Add\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"b\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"Add\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"b\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 5,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"value\\\": \\\"1\\\",\\n                                    \\\"line\\\": 5,\\n                                    \\\"tokentype\\\": \\\"Constant\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 5,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"name\\\": \\\"Add\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"b\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 5\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"name\\\": \\\"Add\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"b\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 5\\n                            }\\n                        ]\\n                    }\\n                ]\\n            },\\n            \\\"loctrans\\\": {\\n                \\\"1\\\": {\\n                    \\\"true\\\": 2\\n                },\\n                \\\"2\\\": {\\n                    \\\"false\\\": 3,\\n                    \\\"true\\\": 4\\n                },\\n                \\\"3\\\": {},\\n                \\\"4\\\": {\\n                    \\\"true\\\": 2\\n                }\\n            },\\n            \\\"locdescs\\\": {\\n                \\\"1\\\": \\\"around the beginning of function 'main'\\\",\\n                \\\"2\\\": \\\"the condition of the 'for' loop at line 4\\\",\\n                \\\"3\\\": \\\"*after* the 'for' loop starting at line 4\\\",\\n                \\\"4\\\": \\\"inside the body of the 'for' loop beginning at line 5\\\"\\n            },\\n            \\\"types\\\": {\\n                \\\"a\\\": \\\"*\\\",\\n                \\\"b\\\": \\\"*\\\",\\n                \\\"ind#0\\\": \\\"int\\\",\\n                \\\"i\\\": \\\"*\\\",\\n                \\\"iter#0\\\": \\\"int\\\"\\n            }\\n        }\\n    }\\n}\",\n  \"student_solution\": \"{\\n    \\\"importStatements\\\": [],\\n    \\\"fncs\\\": {\\n        \\\"main\\\": {\\n            \\\"name\\\": \\\"main\\\",\\n            \\\"rettype\\\": \\\"*\\\",\\n            \\\"initloc\\\": 1,\\n            \\\"endloc\\\": 0,\\n            \\\"params\\\": [],\\n            \\\"locexprs\\\": {\\n                \\\"1\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"a\\\",\\n                        \\\"val1\\\": {\\n                            \\\"value\\\": \\\"10\\\",\\n                            \\\"line\\\": 2,\\n                            \\\"tokentype\\\": \\\"Constant\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"a\\\",\\n                            {\\n                                \\\"value\\\": \\\"10\\\",\\n                                \\\"line\\\": 2\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"a\\\",\\n                            {\\n                                \\\"value\\\": \\\"10\\\",\\n                                \\\"line\\\": 2\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"b\\\",\\n                        \\\"val1\\\": {\\n                            \\\"value\\\": \\\"0\\\",\\n                            \\\"line\\\": 3,\\n                            \\\"tokentype\\\": \\\"Constant\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 3\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 3\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"iter#0\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"range\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"value\\\": \\\"0\\\",\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Constant\\\"\\n                                },\\n                                {\\n                                    \\\"name\\\": \\\"a\\\",\\n                                    \\\"primed\\\": true,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"iter#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"range\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"value\\\": \\\"0\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"a\\\",\\n                                        \\\"primed\\\": true,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"iter#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"range\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"value\\\": \\\"0\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"a\\\",\\n                                        \\\"primed\\\": true,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"ind#0\\\",\\n                        \\\"val1\\\": {\\n                            \\\"value\\\": \\\"0\\\",\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Constant\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    }\\n                ],\\n                \\\"2\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"$cond\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"Lt\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"ind#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"name\\\": \\\"len\\\",\\n                                    \\\"args\\\": [\\n                                        {\\n                                            \\\"name\\\": \\\"iter#0\\\",\\n                                            \\\"primed\\\": false,\\n                                            \\\"line\\\": 4,\\n                                            \\\"tokentype\\\": \\\"Variable\\\"\\n                                        }\\n                                    ],\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Operation\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"$cond\\\",\\n                            {\\n                                \\\"name\\\": \\\"Lt\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"len\\\",\\n                                        \\\"args\\\": [\\n                                            {\\n                                                \\\"name\\\": \\\"iter#0\\\",\\n                                                \\\"primed\\\": false,\\n                                                \\\"line\\\": 4,\\n                                                \\\"tokentype\\\": \\\"Variable\\\"\\n                                            }\\n                                        ],\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Operation\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"$cond\\\",\\n                            {\\n                                \\\"name\\\": \\\"Lt\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"len\\\",\\n                                        \\\"args\\\": [\\n                                            {\\n                                                \\\"name\\\": \\\"iter#0\\\",\\n                                                \\\"primed\\\": false,\\n                                                \\\"line\\\": 4,\\n                                                \\\"tokentype\\\": \\\"Variable\\\"\\n                                            }\\n                                        ],\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Operation\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    }\\n                ],\\n                \\\"3\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"$ret\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"b\\\",\\n                            \\\"primed\\\": false,\\n                            \\\"line\\\": 6,\\n                            \\\"tokentype\\\": \\\"Variable\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"$ret\\\",\\n                            {\\n                                \\\"name\\\": \\\"b\\\",\\n                                \\\"primed\\\": false,\\n                                \\\"line\\\": 6\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"$ret\\\",\\n                            {\\n                                \\\"name\\\": \\\"b\\\",\\n                                \\\"primed\\\": false,\\n                                \\\"line\\\": 6\\n                            }\\n                        ]\\n                    }\\n                ],\\n                \\\"4\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"i\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"GetElement\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"iter#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"name\\\": \\\"ind#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"i\\\",\\n                            {\\n                                \\\"name\\\": \\\"GetElement\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"iter#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"i\\\",\\n                            {\\n                                \\\"name\\\": \\\"GetElement\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"iter#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"ind#0\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"Add\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"ind#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"value\\\": \\\"1\\\",\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Constant\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"Add\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"Add\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"b\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"Sub\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"b\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 5,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"value\\\": \\\"1\\\",\\n                                    \\\"line\\\": 5,\\n                                    \\\"tokentype\\\": \\\"Constant\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 5,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"name\\\": \\\"Sub\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"b\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 5\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"name\\\": \\\"Sub\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"b\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 5\\n                            }\\n                        ]\\n                    }\\n                ]\\n            },\\n            \\\"loctrans\\\": {\\n                \\\"1\\\": {\\n                    \\\"true\\\": 2\\n                },\\n                \\\"2\\\": {\\n                    \\\"false\\\": 3,\\n                    \\\"true\\\": 4\\n                },\\n                \\\"3\\\": {},\\n                \\\"4\\\": {\\n                    \\\"true\\\": 2\\n                }\\n            },\\n            \\\"locdescs\\\": {\\n                \\\"1\\\": \\\"around the beginning of function 'main'\\\",\\n                \\\"2\\\": \\\"the condition of the 'for' loop at line 4\\\",\\n                \\\"3\\\": \\\"*after* the 'for' loop starting at line 4\\\",\\n                \\\"4\\\": \\\"inside the body of the 'for' loop beginning at line 5\\\"\\n            },\\n            \\\"types\\\": {\\n                \\\"a\\\": \\\"*\\\",\\n                \\\"b\\\": \\\"*\\\",\\n                \\\"ind#0\\\": \\\"int\\\",\\n                \\\"i\\\": \\\"*\\\",\\n                \\\"iter#0\\\": \\\"int\\\"\\n            }\\n        }\\n    }\\n}\",\n  \"function\": \"main\",\n  \"inputs\": \"[]\",\n  \"args\": \"\"\n}\n</code></pre> <p>Response: The response contains the program patch generated by the repair engine to fix the student submission in JSON format.</p> <p>Example Successful Response: <pre><code>[\n  {\n    \"lineNumber\": 5,\n    \"oldExpr\": \"b = (b - 1)\",\n    \"newExpr\": \"b = (b + 1)\",\n    \"repairStrings\": [\n      \"Wrong expression. Change b = (b - 1) to b = (b + 1);\"\n    ]\n  }\n]\n</code></pre></p>"},{"location":"getting-started/api.html#feedback-generators-api","title":"Feedback Generators API","text":"<p>Request Format: - prob_desc: A string representing the problem description of the programming assignment. - student_solution: A string containing the response of the Parser API for the student solution. - repair: A string containing the response of the Repair Engines API for the student solution.  </p> <p>Example Request Format:</p> <pre><code>{\n  \"prob_desc\": \"Calculate the sum of the first 10 natural numbers.\",\n  \"student_solution\": \"{\\n    \\\"importStatements\\\": [],\\n    \\\"fncs\\\": {\\n        \\\"main\\\": {\\n            \\\"name\\\": \\\"main\\\",\\n            \\\"rettype\\\": \\\"*\\\",\\n            \\\"initloc\\\": 1,\\n            \\\"endloc\\\": 0,\\n            \\\"params\\\": [],\\n            \\\"locexprs\\\": {\\n                \\\"1\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"a\\\",\\n                        \\\"val1\\\": {\\n                            \\\"value\\\": \\\"10\\\",\\n                            \\\"line\\\": 2,\\n                            \\\"tokentype\\\": \\\"Constant\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"a\\\",\\n                            {\\n                                \\\"value\\\": \\\"10\\\",\\n                                \\\"line\\\": 2\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"a\\\",\\n                            {\\n                                \\\"value\\\": \\\"10\\\",\\n                                \\\"line\\\": 2\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"b\\\",\\n                        \\\"val1\\\": {\\n                            \\\"value\\\": \\\"0\\\",\\n                            \\\"line\\\": 3,\\n                            \\\"tokentype\\\": \\\"Constant\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 3\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 3\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"iter#0\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"range\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"value\\\": \\\"0\\\",\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Constant\\\"\\n                                },\\n                                {\\n                                    \\\"name\\\": \\\"a\\\",\\n                                    \\\"primed\\\": true,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"iter#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"range\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"value\\\": \\\"0\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"a\\\",\\n                                        \\\"primed\\\": true,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"iter#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"range\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"value\\\": \\\"0\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"a\\\",\\n                                        \\\"primed\\\": true,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"ind#0\\\",\\n                        \\\"val1\\\": {\\n                            \\\"value\\\": \\\"0\\\",\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Constant\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"value\\\": \\\"0\\\",\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    }\\n                ],\\n                \\\"2\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"$cond\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"Lt\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"ind#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"name\\\": \\\"len\\\",\\n                                    \\\"args\\\": [\\n                                        {\\n                                            \\\"name\\\": \\\"iter#0\\\",\\n                                            \\\"primed\\\": false,\\n                                            \\\"line\\\": 4,\\n                                            \\\"tokentype\\\": \\\"Variable\\\"\\n                                        }\\n                                    ],\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Operation\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"$cond\\\",\\n                            {\\n                                \\\"name\\\": \\\"Lt\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"len\\\",\\n                                        \\\"args\\\": [\\n                                            {\\n                                                \\\"name\\\": \\\"iter#0\\\",\\n                                                \\\"primed\\\": false,\\n                                                \\\"line\\\": 4,\\n                                                \\\"tokentype\\\": \\\"Variable\\\"\\n                                            }\\n                                        ],\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Operation\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"$cond\\\",\\n                            {\\n                                \\\"name\\\": \\\"Lt\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"len\\\",\\n                                        \\\"args\\\": [\\n                                            {\\n                                                \\\"name\\\": \\\"iter#0\\\",\\n                                                \\\"primed\\\": false,\\n                                                \\\"line\\\": 4,\\n                                                \\\"tokentype\\\": \\\"Variable\\\"\\n                                            }\\n                                        ],\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Operation\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    }\\n                ],\\n                \\\"3\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"$ret\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"b\\\",\\n                            \\\"primed\\\": false,\\n                            \\\"line\\\": 6,\\n                            \\\"tokentype\\\": \\\"Variable\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"$ret\\\",\\n                            {\\n                                \\\"name\\\": \\\"b\\\",\\n                                \\\"primed\\\": false,\\n                                \\\"line\\\": 6\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"$ret\\\",\\n                            {\\n                                \\\"name\\\": \\\"b\\\",\\n                                \\\"primed\\\": false,\\n                                \\\"line\\\": 6\\n                            }\\n                        ]\\n                    }\\n                ],\\n                \\\"4\\\": [\\n                    {\\n                        \\\"val0\\\": \\\"i\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"GetElement\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"iter#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"name\\\": \\\"ind#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"i\\\",\\n                            {\\n                                \\\"name\\\": \\\"GetElement\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"iter#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"i\\\",\\n                            {\\n                                \\\"name\\\": \\\"GetElement\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"iter#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"ind#0\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"Add\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"ind#0\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"value\\\": \\\"1\\\",\\n                                    \\\"line\\\": 4,\\n                                    \\\"tokentype\\\": \\\"Constant\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 4,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"Add\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"ind#0\\\",\\n                            {\\n                                \\\"name\\\": \\\"Add\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"ind#0\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 4,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 4\\n                            }\\n                        ]\\n                    },\\n                    {\\n                        \\\"val0\\\": \\\"b\\\",\\n                        \\\"val1\\\": {\\n                            \\\"name\\\": \\\"Sub\\\",\\n                            \\\"args\\\": [\\n                                {\\n                                    \\\"name\\\": \\\"b\\\",\\n                                    \\\"primed\\\": false,\\n                                    \\\"line\\\": 5,\\n                                    \\\"tokentype\\\": \\\"Variable\\\"\\n                                },\\n                                {\\n                                    \\\"value\\\": \\\"1\\\",\\n                                    \\\"line\\\": 5,\\n                                    \\\"tokentype\\\": \\\"Constant\\\"\\n                                }\\n                            ],\\n                            \\\"line\\\": 5,\\n                            \\\"tokentype\\\": \\\"Operation\\\"\\n                        },\\n                        \\\"valueArray\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"name\\\": \\\"Sub\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"b\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 5\\n                            }\\n                        ],\\n                        \\\"valueList\\\": [\\n                            \\\"b\\\",\\n                            {\\n                                \\\"name\\\": \\\"Sub\\\",\\n                                \\\"args\\\": [\\n                                    {\\n                                        \\\"name\\\": \\\"b\\\",\\n                                        \\\"primed\\\": false,\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Variable\\\"\\n                                    },\\n                                    {\\n                                        \\\"value\\\": \\\"1\\\",\\n                                        \\\"line\\\": 5,\\n                                        \\\"tokentype\\\": \\\"Constant\\\"\\n                                    }\\n                                ],\\n                                \\\"line\\\": 5\\n                            }\\n                        ]\\n                    }\\n                ]\\n            },\\n            \\\"loctrans\\\": {\\n                \\\"1\\\": {\\n                    \\\"true\\\": 2\\n                },\\n                \\\"2\\\": {\\n                    \\\"false\\\": 3,\\n                    \\\"true\\\": 4\\n                },\\n                \\\"3\\\": {},\\n                \\\"4\\\": {\\n                    \\\"true\\\": 2\\n                }\\n            },\\n            \\\"locdescs\\\": {\\n                \\\"1\\\": \\\"around the beginning of function 'main'\\\",\\n                \\\"2\\\": \\\"the condition of the 'for' loop at line 4\\\",\\n                \\\"3\\\": \\\"*after* the 'for' loop starting at line 4\\\",\\n                \\\"4\\\": \\\"inside the body of the 'for' loop beginning at line 5\\\"\\n            },\\n            \\\"types\\\": {\\n                \\\"a\\\": \\\"*\\\",\\n                \\\"b\\\": \\\"*\\\",\\n                \\\"ind#0\\\": \\\"int\\\",\\n                \\\"i\\\": \\\"*\\\",\\n                \\\"iter#0\\\": \\\"int\\\"\\n            }\\n        }\\n    }\\n}\",\n  \"repair\": \"[\\n  {\\n    \\\"lineNumber\\\": 5,\\n    \\\"oldExpr\\\": \\\"b = (b - 1)\\\",\\n    \\\"newExpr\\\": \\\"b = (b + 1)\\\",\\n    \\\"repairStrings\\\": [\\n      \\\"Wrong expression. Change b = (b - 1) to b = (b + 1);\\\"\\n    ]\\n  }\\n]\",\n}\n</code></pre> <p>Response: The response contains the feedback generated by the Generative AI models in the feedback generator for the student solution in JSON format.</p> <p>Example Successful Response: <pre><code>{\n  \"feedback\": [\n    {\n      \"lineNumber\": 5,\n      \"feedback\": \"The student made a mistake in the inner loop condition at line 5 about the increment of the variable. To further understand the mistake, the student should recap the increment and decrement operators in C programming.\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"getting-started/availability.html","title":"Availability","text":""},{"location":"getting-started/availability.html#_1","title":"Availability","text":""},{"location":"getting-started/overview.html","title":"Overview","text":"Figure 1: Overview of the workflow of the Intelligent Tutoring System. <p>Let's consider a simple programming assignment where students are asked to write a C program that calculates the sum of the first <code>n</code> natural numbers in Figure 1. The program should take an integer <code>n</code> as input and output the sum of the first <code>n</code> natural numbers. </p> <p>The student made a mistake in the inner loop condition at line 8.  The correct loop condition should be <code>j&lt;=i</code> instead of <code>j&lt;=N</code>. In addition to the programs, we also assume to have some tests, which can be used to assess the correctness of the student submission. In this example, we only have some concrete inputs of interest \\(n\\in\\{2, 4, 10, 3, 1, 20\\}\\), and the correct behavior can be extracted from the reference implementation.</p> <pre><code>#Reference Solution from Instructor \n#include &lt;stdio.h&gt;\nint main(){\n  int i,j,n,sum=0;\n  scanf(\"%d\",&amp;n);  \n  for(i=1;i&lt;=n;i++){\n    for(j=1;j&lt;=i;j++){\n      sum+=j;\n    }\n  }\n  printf(\"%d\",sum);\n  return 0;\n}    \n</code></pre> <pre><code>#Example Student Submission (Incorrect)\n#include &lt;stdio.h&gt;\nint main(){\n  int i,j,N,sum;\n  sum=0;\n  scanf(\"%d\",&amp;N);\n  for(i=1;i&lt;=N;i++){\n    for(j=1;j&lt;=N;j++){ &lt;== Incorrect loop condition\n      sum=sum+j;\n    }\n  }\n  printf(\"%d\",sum);\n  return 0;\n} \n</code></pre>"},{"location":"getting-started/overview.html#parser","title":"Parser","text":"<p>The reference program and the submitted (incorrect) program are given to the parser component. For each program, it generates the corresponding internal program representation. This representation is based on the Control-Flow Graph (CFG). Finally, the results are passed to the alignment component. The objective of the parser components is to enable the other internal parts of the Intelligent Tutoring System to work independently from a specific programming language. The simplified illustration of the internal CFG-based program representation for the reference program is shown in Figure 2. Note that the (incorrect) student submission has the same structure, i.e., the same number of basic blocks, although a different content in the blocks.</p> Figure 2: Simplified illustration of the CFG-based internal program representation of the code in the example reference solution."},{"location":"getting-started/overview.html#alignment","title":"Alignment","text":"<p>The alignment component takes the two Program objects and identifies the matching basic blocks. Therefore, it aligns the two programs with regard to their CFG representation. Moreover, it maps the existing variables for each function inside the programs. The results can later be used to detect (error) locations where the reference and submitted programs behave differently. Additionally, this information helps to attempt the repair/fix of the submitted program by reusing information from the reference program. Our current baseline implementation follows the approach by Clara, which attempts to match the two programs based on their control flow and their variables. % In our example, the structure is the same, so the mapping is straightforward. Internally, we keep a mapping for each function and its basic blocks: \\(main:\\{1=1, 2=2, 3=3, 4=4, 5=5, 6=6, 7=7\\}\\)</p> <p>To build the variable mapping, we use a Define-Use Analysis (DUA) (also see Hu et al.). The resulting variable matching is: \\(main=\\{i=i, sum=sum, j=j, n=N\\}\\)</p>"},{"location":"getting-started/overview.html#error-localizer-and-interpreter","title":"Error Localizer and Interpreter","text":"<p>The error localizer component identifies locations that show erroneous behavior in the submitted program. This enables others components to formulate a repair/fix.  The error localizer component has access to the interpreter component to execute test cases while observing the values of variables at specific locations. It can use the interpreter to detect semantic differences between the reference and submitted programs. For our example, we use a trace-based error localizer. It uses the interpreter to execute the inputs for both programs and compares the resulting execution traces. </p> <p>For the input \\(n=2\\), our error localizer identifies a value mismatch at location 4. It also detects which variable or expression holds the first observation of this mismatch: the loop condition in line 7 in the student's submission, j&lt;=N.</p>"},{"location":"getting-started/overview.html#repair-engines","title":"Repair Engines","text":"<p>The repair component attempts to fix the submitted program. For example, it can use the mapping to the reference program (see step 2) and the identified error locations (see step 3) to generate so-called local repairs that modify single statements in the submitted program. Multiple local repairs can be combined to represent more complex changes.</p> <p>The repair process results in a list of plausible repair candidates. It can also use the interpreter component to extract more information from the (correct) reference program.</p> <p>For our example, we use an ILP-based repair implementation similar to Clara. It uses the reference implementation information to search for a minimal change to transform the student's program into the reference program. The local repair with the smallest repair cost is to change the condition location 6 from j &lt;= N to j &lt;= i. </p> <p>Additionally, we already integrated other repair strategies like Refactory and particularly allow the use of multiple reference implementations to maximize the chances of structural matching between the student's submission and the reference solution.</p>"},{"location":"getting-started/overview.html#feedback-generators","title":"Feedback Generators","text":"<p>With the collected information from previous components, the feedback component generates natural language explanations to guide students in correcting their mistakes without revealing the direct answer. This component incorporates a common front-end prompt interface with various LLM backends, allowing flexible switching between different LLMs and easy integration of new LLMs. Currently, it supports both commercial LLMs like GPT and Claude series, as well as open-source LLMs like LLaMA from Meta. We use GPT-3.5 as the default LLM backend to balance performance and cost.</p>"},{"location":"getting-started/demos/basic.html","title":"Basic Example","text":""},{"location":"getting-started/demos/basic.html#print-prime-number-within-a-range","title":"Print Prime Number within a Range","text":"<p>We demonstrate the use of ITS through a few programming tasks at different difficulty levels. We start with a typical task at the first-year programming course level (resource), which is to <code>Given two positive integers, n1 and n2, output all the prime numbers between (and including) n1 and n2, separated by a space each</code>.</p> <pre><code>#include&lt;stdio.h&gt;\nint check_prime(int num){\n    if(num==1){\n        return 1;\n    }\n   int j,flag=0;\n   for(j=2;j&lt;=num/2;++j){\n        if(num%j==0){\n            flag=1;\n            break;\n        }\n   }\n   return flag;\n}\n\nint main(){\n   int n1,n2,i,flag;\n   scanf(\"%d %d\",&amp;n1, &amp;n2);\n   for(i=n1;i&lt;=n2;++i){\n      flag=check_prime(i);\n      if(flag==0)\n         printf(\"%d \",i);\n   }\n   return 0;\n}\n</code></pre> <pre><code>#include&lt;stdio.h&gt;\nint check_prime(int num){\n    int i;\n    scanf(\"%d\",&amp;num);\n    for(i=2;i&lt;=num-1;i++){\n       if(num%i==0){\n           return 0;\n       }  \n    }\n    return 1;\n}\n\nint main(){\n    int i,n1,n2;\n    scanf(\"%d %d\",&amp;n1,&amp;n2);\n    for(i=n1;i&lt;=n2;i++)   \n        if(check_prime(i)){\n            printf(\"%d\", i);   \n        }\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\n// Function to check if a number is prime\nint check_prime(int num) {\n    int i;\n    if (num &lt;= 1) {\n        return 0; // Numbers less than or equal to 1 are not prime\n    }\n    if (num == 2) {\n        return 1; // 2 is a prime number\n    }\n    if (num % 2 == 0) {\n        return 0; // Even numbers greater than 2 are not prime\n    }\n    for (i = 3; i &lt;= sqrt(num); i += 2) {\n        if (num % i == 0) {\n            return 0; // Not a prime number\n        }\n    }\n    return 1; // Prime number\n}\n\nint main() {\n    int i, n1, n2;\n    scanf(\"%d %d\", &amp;n1, &amp;n2);\n    for (i = n1; i &lt;= n2; i++) {\n        if (check_prime(i)) {\n            printf(\"%d \", i); // Print each prime number followed by a space\n        }\n    }\n    printf(\"\\n\"); // Print a newline at the end\n    return 0;\n}\n</code></pre>"},{"location":"getting-started/demos/basic.html#fixing-patches-from-its-repair-engine","title":"Fixing Patches from ITS Repair Engine:","text":"<ul> <li>add <code>if(num==1){return 1;}</code> in check_prime function.</li> <li>remove <code>scanf(\"%d\",&amp;num);</code> in check_prime function.</li> <li>change <code>printf(\"%d\", i);</code> to <code>printf(\"%d \", i);</code> in the main function.</li> </ul>"},{"location":"getting-started/demos/basic.html#final-its-feedback","title":"Final ITS Feedback:","text":"<ol> <li>Misplaced Input Operation: The <code>check_prime</code> function unnecessarily takes an input. This is incorrect as the function is supposed to only check if the number passed to it is prime or not, and not to ask for any input. This causes the function to overwrite the input number num with a new user-provided value each time, defeating its purpose.</li> <li>Lack of Special Case Handling for 1: The function does not account for the fact that 1 is not a prime number. Without handling this case, the function may incorrectly identify 1 as a prime number.</li> <li>Output Format Issue: In the main function, when printing prime numbers, the output format is incorrect as it does not include a space between the numbers. This leads to the output being concatenated without spaces, making it difficult to read.</li> </ol>"},{"location":"getting-started/demos/ds.html","title":"Data Structure Example","text":""},{"location":"getting-started/demos/ds.html#construct-binary-tree-from-preorder-and-inorder-traversal","title":"Construct Binary Tree from Preorder and Inorder Traversal","text":"<p>Let's take a look slightly more difficult task from LeetCode (Construct Binary Tree from Preorder and Inorder Traversal) which is a variation application that aims to build up the deep understanding of the tree traversal. </p> <p>Problem Statement:</p> <p>Given two integer arrays <code>preorder</code> and <code>inorder</code> where <code>preorder</code> is the preorder traversal of a binary tree and <code>inorder</code> is the inorder traversal of the same tree, construct and return the binary tree.</p> <p>To solve this problem, students need to understand the concept of binary tree traversal and the unique properties of preorder and inorder traversal, as well as the recursive approach to build the tree.</p> <pre><code>class Solution {\n    public TreeNode buildTree(int[] preorder, int[] inorder) {\n       return buildTree(preorder, inorder, 0, inorder.length-1);\n    }\n    public int index = 0;\n    public TreeNode buildTree(int[] preorder, int[] inorder, int start, int end){\n        if(start&gt;end)\n            return null;\n\n        int rootVal = preorder[index++];\n        int leftIndex = search(inorder, start, end, rootVal);\n        TreeNode t = new TreeNode(rootVal);\n        t.left = buildTree(preorder, inorder, start, leftIndex-1);\n        t.right = buildTree(preorder, inorder, leftIndex+1, end);\n        return t;\n    }\n\n    public int search(int arr[], int strt, int end, int value){\n        int i;\n        for (i = strt; i &lt;= end; i++) {\n            if (arr[i] == value)\n                return i;\n        }\n        return i;\n    }\n}\n</code></pre> <pre><code>class Solution {\n    public TreeNode buildTree(int[] preorder, int[] inorder) {\n        if (preorder.length &lt;= 0 || inorder.length &lt;= 0) {\n            return null;\n        }\n        if (preorder.length != inorder.length) {\n            return null;\n        }\n\n        return build(1, preorder, inorder, 0, inorder.length - 1);\n    }\n\n    private TreeNode build(int curr, int[] preorder, int[] inorder, int low, int high) {\n        if (high &lt; low) {\n            return null;\n        }\n\n        TreeNode root = new TreeNode(preorder[curr]);\n\n        if (high == low) {\n            return root;\n        }\n\n        int mid = -1;\n        for (int i = 0; i &lt; inorder.length; i++) {\n            if (inorder[i] == preorder[curr]) {\n                mid = i;\n                break;\n            }\n        }\n\n        TreeNode left = build(curr + 1, preorder, inorder, low, mid - 1);\n        TreeNode right = build(mid + 1, preorder, inorder, mid + 1, high);\n        connect(root, left, right);\n\n        return root;\n    }\n}\n</code></pre>"},{"location":"getting-started/demos/ds.html#final-its-feedback","title":"Final ITS Feedback:","text":""},{"location":"getting-started/demos/leetcode.html","title":"LeetCode Example","text":""},{"location":"getting-started/demos/leetcode.html#construct2darray","title":"construct2DArray","text":"<p>Let's take a look slightly more difficult task from LeetCode (biweekly-contest-62) which is to understand how to <code>Convert 1D Array Into 2D Array</code>  function.</p> <p>Problem Statement:</p> <p>You are given a 0-indexed 1-dimensional (1D) integer array <code>original</code>, and two integers, <code>m</code> and <code>n</code>. You are tasked with creating a 2-dimensional (2D) array with <code>m</code> rows and <code>n</code> columns using all the elements from <code>original</code>.</p> <p>The elements from indices <code>0</code> to <code>n - 1</code> (inclusive) of <code>original</code> should form the first row of the constructed 2D array, the elements from indices <code>n</code> to <code>2 * n - 1</code> (inclusive) should form the second row of the constructed 2D array, and so on.</p> <p>Return an <code>m x n</code> 2D array constructed according to the above procedure, or an empty 2D array if it is impossible.</p> <pre><code>public int[][] construct2DArray(int[] original, int m, int n) {\n    if (original.length != m * n) {\n        return new int[0][0];\n    }\n\n    int[][] result = new int[m][n];\n    int index = 0;\n    for (int i = 0; i &lt; m; i++) {\n        for (int j = 0; j &lt; n; j++) {\n            result[i][j] = original[index++];\n        }\n    }\n    return result;\n}\n</code></pre> <pre><code>public static int[][] construct2DArray(int[] original, int m, int n) {\n    int[][] result = new int[m][n];\n    for (int i = 0; i &lt; result.length; i++) {\n        for (int j = 0; j &lt; result[i].length; j++) {\n            if (i * result[0].length + j &gt;= original.length) {\n                return new int[0][0];\n            } else {\n                result[i][j] = original[i * result[0].length + j];\n            }\n        }\n    }\n    return result;\n}\n</code></pre>"}]}